@use "sass:color";
@use "sass:math";

// --- Variables ---
$accent-purple: #a100ff;
$white: #fff;
$black: #000;
$dark-bg: #1c1c1c; // Consider if needed, using white now
$medium-dark-bg: #222; // Desktop dropdown bg (Keep for reference if needed)
$light-dark-bg: #e0e0e0; // Lighter border for white background
$grey-text: #555; // Darker grey for readability on white
$navbar-height: 80px;
$mobile-menu-transition: right 0.4s ease-in-out, opacity 0.4s ease-in-out; // Added opacity
$tablet-breakpoint: 960px; // Breakpoint where mobile styles START
$mobile-breakpoint: 767px; // Breakpoint for full-width mobile menu
$light-grey: #f4f4f4; // Background for the section
$link-blue: #007bff; // Example blue for the link
$grey-text: #555; // For the description text

// --- Base & Desktop Styles (Mostly unchanged, added comments) ---
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0; // Added margin reset
}

body {
  font-family: Arial, sans-serif;
  background-color: $white;
  color: $black; // Default text color to black
}
.navbar {
  background-color: $white;
  height: $navbar-height;
  display: flex;
  justify-content: center;
  align-items: center;
  position: sticky;
  top: 0;
  z-index: 999;
  border-bottom: 1px solid $light-dark-bg;

  .navbar-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
    width: 100%;
    margin: 0 auto;
    padding: 0 25px;
  }

  .navbar-logo {
    color: $black;
    text-decoration: none;
    font-size: 1.8rem;
    font-weight: bold;
    display: flex;
    align-items: center;
    flex-shrink: 0;

    .logo-arrow {
      color: $accent-purple;
      margin-left: 2px;
      font-weight: bold;
      font-size: 2.2rem;
      line-height: 1;
    }
  }

  .menu-icon {
    display: none;
    color: $black;
    font-size: 1.8rem;
    cursor: pointer;
    z-index: 1001;
    position: relative;
  }

  .nav-menu {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    align-items: center;
    height: 100%;

    .mobile-menu-header,
    .mobile-menu-footer {
      display: none;
    }
  }

  .nav-item {
    height: 100%;
    position: relative;

    .nav-links {
      color: $black;
      text-decoration: none;
      display: flex;
      align-items: center;
      height: 100%;
      padding: 0 1rem;
      cursor: pointer;
      white-space: nowrap;
      transition: color 0.3s ease, border-color 0.3s ease;

      &:hover {
        color: $accent-purple;
        border-bottom: 3px solid $accent-purple;
      }

      .dropdown-arrow {
        margin-left: 8px;
        font-size: 0.8em;
        transition: transform 0.3s ease;
      }
    }

    .dropdown-content {
      display: none;
      position: absolute;
      top: $navbar-height;
      left: 0;
      background-color: $white;
      min-width: 500px;
      box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.15);
      z-index: 10;
      padding: 20px;
      text-align: left;
      border-top: 1px solid $light-dark-bg;

      .submenu-nav {
        display: inline-flex;
        gap: 30px;
        width: 100%;
        justify-content: flex-start;

        .dropdown-wrapper {
          display: flex;
          flex-direction: column;

          h4 {
            color: $grey-text;
            font-size: 0.9rem;
            margin-bottom: 10px;
            font-weight: bold;
            text-transform: uppercase;
          }

          .dropdown-column {
            .dropdown-column-types {
              display: flex;
              flex-direction: column;

              a {
                color: $black;
                padding: 8px 0px;
                text-decoration: none;
                display: block;
                font-size: 0.95rem;

                &:hover {
                  color: $accent-purple;
                }
              }
            }
          }
        }
      }
    }

    &:hover > .dropdown-content {
      @media screen and (min-width: ($tablet-breakpoint + 1px)) {
        display: flex;
      }
    }
  }

  .navbar-right {
    display: flex;
    align-items: center;
    color: $black;

    .nav-icon-link,
    .nav-locale {
      color: $black;
      text-decoration: none;
      margin-left: 1.5rem;
      display: flex;
      align-items: center;

      i {
        margin-right: 5px;
      }

      &:hover {
        color: $accent-purple;
      }
    }
  }

  @media screen and (min-width: ($tablet-breakpoint + 1px)) {
    .navbar-right {
      display: flex;
    }
    .menu-icon {
      display: none;
    }
    .mobile-menu-header,
    .mobile-menu-footer {
      display: none;
    }
  }

  @media screen and (max-width: $tablet-breakpoint) {
    .menu-icon {
      display: block;
    }
    .navbar-right {
      display: none;
    }
    .nav-item.dropdown:hover > .dropdown-content {
      display: none;
    }

    .nav-menu {
      display: flex;
      flex-direction: column;
      position: fixed;
      top: 0;
      right: -370px;
      width: 350px;
      max-width: 90%;
      height: 100vh;
      background-color: $white;
      z-index: 1000;
      transition: $mobile-menu-transition;
      overflow-y: auto;
      overflow-x: hidden;
      align-items: stretch;
      text-align: left;
      border-left: 1px solid $light-dark-bg;
      box-shadow: -5px 0px 15px rgba(0, 0, 0, 0.1);
      opacity: 0;

      &.active {
        right: 0;
        opacity: 1;

        .mobile-menu-header,
        .mobile-menu-footer {
          display: flex;
        }
      }

      .mobile-menu-header {
        display: none;
        height: $navbar-height;
        align-items: center;
        justify-content: space-between;
        padding: 0 20px;
        border-bottom: 1px solid $light-dark-bg;
        flex-shrink: 0;

        .close-menu-btn {
          color: $black;
          font-size: 1.8rem;
          cursor: pointer;
          background: none;
          border: none;
          padding: 5px;
          margin-left: -5px;
        }

        .mobile-header-right {
          display: flex;
          align-items: center;
          gap: 1.5rem;

          .nav-icon-link,
          .nav-locale {
            display: flex;
            color: $black;
            text-decoration: none;
            align-items: center;

            i {
              margin-right: 5px;
            }

            &:hover {
              color: $accent-purple;
            }
          }
        }
      }

      .nav-item {
        height: auto;
        width: 100%;
        position: relative;
        border-bottom: 1px solid $light-dark-bg;

        &:last-of-type {
          border-bottom: none;
        }

        &.submenu-open {
          > .nav-links .mobile-arrow {
            transform: rotate(180deg);
          }
          > .dropdown-content {
            display: block;
          }
        }
      }

      .nav-links {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 1.5rem;
        height: auto;
        font-size: 1.1rem;
        color: $black;
        text-decoration: none;
        width: 100%;
        font-weight: bold;

        &:hover {
          background-color: rgba($black, 0.03);
          color: $accent-purple;
        }

        .dropdown-arrow {
          font-size: 1em;
          margin-left: 10px;
          transition: transform 0.3s ease-in-out;
        }

        .mobile-arrow {
          display: inline-block;
        }
      }

      .dropdown-content {
        display: none;
        position: static;
        width: 100%;
        height: auto;
        background: #f8f8f8;
        z-index: auto;
        padding: 0;
        margin: 0;
        border-top: 1px solid $light-dark-bg;

        .submenu-nav {
          display: block;
          padding: 0.5rem 0;
          width: 100%;

          .dropdown-wrapper {
            padding: 0 1.5rem 0 2.5rem;
            margin-bottom: 0.5rem;

            h4 {
              color: $grey-text;
              font-size: 0.8rem;
              margin-bottom: 5px;
              padding-top: 0.8rem;
              font-weight: normal;
            }

            .dropdown-column {
              .dropdown-column-types {
                a {
                  color: $black;
                  padding: 0.6rem 0;
                  text-decoration: none;
                  display: block;
                  font-size: 1rem;

                  &:hover {
                    color: $accent-purple;
                  }
                }
              }
            }
          }
        }
      }

      .mobile-menu-footer {
        display: none;
        flex-direction: column;
        padding: 1rem 1.5rem 1.5rem 1.5rem;
        border-top: 1px solid $light-dark-bg;
        width: 100%;
        flex-shrink: 0;
        margin-top: auto;

        a:not(.social-icons a) {
          color: $grey-text;
          text-decoration: none;
          display: block;
          padding: 0.5rem 0;
          font-size: 1rem;

          &:hover {
            color: $black;
          }
        }

        .social-icons {
          display: flex;
          gap: 1.5rem;
          margin-top: 1rem;

          a {
            font-size: 1.5rem;
            padding: 0;
            color: $grey-text;

            &:hover {
              color: $black;
            }
          }
        }
      }
    }

    @media screen and (max-width: $mobile-breakpoint) {
      .nav-menu {
        width: 100%;
        max-width: 100%;
        right: -100%;
        border-left: none;
        box-shadow: none;

        &.active {
          right: 0;
        }

        .nav-links {
          padding: 1rem;
        }

        .dropdown-content .dropdown-wrapper {
          padding: 0 1rem 0 2rem;
        }

        .mobile-menu-footer {
          padding: 1rem;
        }
      }
    }
  }
}
/* --- Variables --- */
$font-stack: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica,
  Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
$line-height-base: 1.6;
$spacer-bg-color: #f0f4f8;
$reveal-section-initial-bg: #e0e0e0;
$reveal-section-height: 300vh; // Controls scroll duration
$initial-mask-size: 150px;
$final-content-bottom-pos: 5vh;
$text-color-dark: #1a1a1a;
$text-color-medium: #333;
$text-color-light: #ffffff;
$button-bg: #007bff;
$button-bg-hover: #0056b3;

/* --- Scroll Reveal Section --- */
.scroll-reveal-section {
  height: $reveal-section-height;
  position: relative;
  background-color: $reveal-section-initial-bg;
}

.sticky-container {
  position: sticky;
  top: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  display: flex;
  justify-content: center; // Horizontal center
  align-items: flex-end; // Vertical alignment to bottom
  padding-bottom: 15vh; // Push text up from bottom
  box-sizing: border-box;
}

.masked-content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("https://images.unsplash.com/photo-1506748686214-e9df14d4d9d0?ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80"); // Background Image
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  z-index: 1; // Base layer

  // CSS Masking
  mask-image: radial-gradient(circle, black 100%, transparent 100%);
  mask-size: $initial-mask-size $initial-mask-size; // Use variable twice for clarity
  mask-repeat: no-repeat;
  mask-position: center center;
  // Apply vendor prefixes directly here for simplicity,
  // though mixins or autoprefixers are common in real projects
  -webkit-mask-image: radial-gradient(circle, black 100%, transparent 100%);
  -webkit-mask-size: $initial-mask-size $initial-mask-size;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-position: center center;
}

/* --- Initial Centered Text --- */
.centered-text {
  position: relative;
  z-index: 10;
  color: $text-color-dark;
  text-align: center;
  opacity: 1;
  transition: opacity 0.3s ease-out;
  max-width: 80%;
  padding: 25px 35px;
  border-radius: 8px;
  background-color: rgba(255, 255, 255, 0.6);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  margin-bottom: 0; // Managed by container padding

  h1 {
    margin-top: 0;
    margin-bottom: 0.5rem;
    font-size: clamp(1.8rem, 5vw, 3rem);
  }
  p {
    margin-bottom: 0;
    font-size: clamp(1rem, 2.5vw, 1.2rem);
    color: $text-color-medium;
  }
}

/* --- Final Revealed Content --- */
.final-content {
  position: absolute;
  bottom: $final-content-bottom-pos;
  left: 50%;
  width: 80%;
  max-width: 700px;
  z-index: 5;
  color: $text-color-light;
  text-align: center;
  padding: 20px;
  box-sizing: border-box;

  // Initial state for animation
  opacity: 0;
  transform: translate(-50%, 30px); // Start shifted down & centered
  transition: opacity 0.8s ease-out,
    transform 0.8s cubic-bezier(0.25, 0.1, 0.25, 1);
  pointer-events: none;

  // State when visible - using & to refer to the parent selector
  &.visible {
    opacity: 1;
    transform: translate(-50%, 0); // Slide up & centered
    pointer-events: auto;

    // Apply breathing animation only when visible
    .author,
    .title {
      animation: breath 4s ease-in-out infinite;
    }
    .title {
      animation-delay: 0.2s; // Stagger
    }
  }

  // Nested styles for children
  .quote {
    font-size: clamp(1.1rem, 2.5vw, 1.5rem);
    font-style: italic;
    margin-bottom: 1.5rem;
    line-height: 1.4;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
  }

  .author,
  .title {
    font-size: clamp(0.9rem, 2vw, 1.1rem);
    margin: 0.2rem 0;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    // Base state for animation
    opacity: 1;
    transform: scale(1);
  }

  .title {
    font-size: clamp(0.8rem, 1.8vw, 1rem);
    opacity: 0.9;
    margin-bottom: 2rem;
  }

  .cta-button {
    display: inline-block;
    padding: 12px 25px;
    background-color: $button-bg;
    color: $text-color-light;
    border: none;
    border-radius: 5px;
    text-decoration: none;
    font-weight: bold;
    font-size: clamp(0.9rem, 2vw, 1rem);
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    margin-top: 1rem;

    // Hover/focus states using &
    &:hover,
    &:focus {
      background-color: $button-bg-hover;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    }
  }
}

/* --- Breathing Animation Keyframes --- */
@keyframes breath {
  0%,
  100% {
    transform: scale(1);
    opacity: 0.9;
  }
  50% {
    transform: scale(1.03);
    opacity: 1;
  }
}

/* ======================== GLOBAL TEAM STATS SECTION STYLES ======================== */
.global-team-stats-section {
  padding: 60px 20px; /* Add some padding top/bottom and sides */
  background-color: #fff; /* Assuming a white background */
  text-align: center; /* Center the main heading */
}

.global-team-stats-section .section-container {
  max-width: 1140px; /* Match your existing container max-width */
  margin: 0 auto;
  padding: 0 15px; /* Add side padding if needed, or rely on parent */
}

.global-stats-heading {
  font-size: 2.5rem;
  font-weight: bold;
  color: #000;
  margin-bottom: 40px; /* Space below the heading */
  text-align: center; /* Ensure heading is centered */
}

.global-stats-layout {
  display: grid; /* Use CSS Grid for desktop layout */
  /* Define 3 columns: left stats, visual, right stats */
  /* Adjust column widths as needed. Auto makes visual take up space based on content. */
  /* Using percentages or fr units could also work. */
  grid-template-columns: 1fr auto 1fr; /* 1fr makes columns flexible */
  gap: 40px; /* Gap between columns */
  align-items: center; /* Vertically center items in the grid row */
}

/* Positioning for the two stats columns within the grid */
.global-stats-column {
  /* No explicit column styling needed yet, grid handles it */
}

/* Style for each individual stat block */
.stat-block {
  margin-bottom: 40px; /* Space between top and bottom stat in a column */
  text-align: right; /* Default alignment for left column */
}

.global-stats-right .stat-block {
  text-align: left; /* Override alignment for right column */
}

.stat-number {
  font-size: 4.5rem; /* Large font size for the number */
  font-weight: normal; /* As seen in the image, not bold */
  color: #000;
  line-height: 1; /* Tight line height */
  margin-bottom: 8px; /* Space below the number */
}

.stat-description {
  font-size: 0.95rem;
  color: #555; /* Or a dark gray */
  line-height: 1.5;
  margin-bottom: 15px; /* Space below the text, before the line */
}

.stat-line {
  display: block; /* Ensure it takes full width */
  height: 1px; /* Thin line */
  background-color: #e0e0e0; /* Light gray line color */
  border: none; /* Remove default <hr> border */
  margin: 0; /* Remove default <hr> margin */
}

.global-stats-left .stat-block .stat-line {
  /* Line alignment for left column */
  margin-left: auto; /* Push the line to the right within its container */
  margin-right: 0;
}

.global-stats-right .stat-block .stat-line {
  /* Line alignment for right column */
  margin-left: 0;
  margin-right: auto; /* Push the line to the left within its container */
}

/* --- Central Visual Element Styling --- */
.global-stats-visual {
  position: relative; /* Context for absolute positioning of shapes */
  /* Set a width/height for the visual container itself */
  /* Adjust to control the size of the visual block in the grid */
  width: 250px; /* Example width */
  height: 350px; /* Example height */
  flex-shrink: 0; /* Prevent it from shrinking in flex layout */
}

.visual-shape {
  position: absolute;
  width: 100%; /* Shapes fill the visual container */
  height: 100%;
  /* Adjust transform-origin for skewing from a specific point if desired */
  transform-origin: top right;
}

.purple-shape {
  background-color: #a100ff; /* Your brand purple color */
  z-index: 1; /* Purple shape is behind the image shape */
  /* Skewing from bottom right */
  transform-origin: bottom right;
  transform: skewY(-10deg); /* Adjust angle as needed */
  /* Adjust positioning slightly if needed after skew */
  top: 0;
  right: 0; /* Example positioning */
}

.image-shape {
  z-index: 2; /* Image shape is in front */
  overflow: hidden; /* Hide parts of the image that go outside the shape */
  /* Skewing from top left */
  transform-origin: top left;
  transform: skewY(-10deg); /* Same angle for consistency */
  /* Adjust positioning slightly if needed after skew */
  top: 0;
  left: 0; /* Example positioning */
}

.image-shape img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover; /* Cover the shape area without distortion */
  /* Counter-skew the image slightly if needed to make its content appear less skewed */
  /* transform: skewY(10deg); */ /* Experiment with this */
}
/* ======================== MOBILE STYLES (Corrected Row Layout) ======================== */
@media screen and (max-width: 767px) {
  /* Adjust breakpoint */

  .global-stats-heading {
    font-size: 2rem;
    margin-bottom: 30px;
  }

  /* Change layout to Flexbox row */
  .global-stats-layout {
    display: flex;
    flex-direction: row; /* Arrange children side-by-side */
    flex-wrap: nowrap; /* IMPORTANT: Prevent wrapping to next line */
    gap: 15px; /* Reduce gap slightly for smaller screens */
    align-items: center; /* Vertically center the text block and image block */
    grid-template-columns: none; /* Remove grid definition */
  }

  /* Style the text wrapper (Left Column on Mobile) */
  .global-stats-text-wrapper {
    display: flex;
    flex-direction: column;
    /* Use width instead of flex-basis for clarity with gap */
    /* Calculate width considering the gap (e.g., 15px gap) */
    width: calc(60% - 7.5px); /* Example: 60% width minus half the gap */
    order: 1;
    flex-shrink: 0; /* Prevent shrinking if content is large */
  }

  /* Style the visual element (Right Column on Mobile) */
  .global-stats-visual {
    grid-column: auto;
    /* Use width instead of flex-basis */
    width: calc(40% - 7.5px); /* Example: 40% width minus half the gap */
    order: 2;
    height: auto;
    min-height: 280px; /* Adjust height as needed */
    max-width: none; /* REMOVE max-width constraint */
    margin: 0;
    align-self: center; /* Keep vertical centering */
    position: relative; /* Keep relative positioning */
    flex-shrink: 0; /* Prevent shrinking */
    z-index: 1;
  }

  /* Ensure columns stack correctly inside the text wrapper */
  .global-stats-column {
    width: 100%;
    text-align: left !important;
    grid-column: auto;
  }
  .global-stats-column .stat-block:last-child {
    margin-bottom: 0;
  }

  .stat-block {
    text-align: left !important;
    margin-bottom: 20px; /* Adjust spacing */
  }

  .stat-item {
    text-align: left !important;
    margin-bottom: 5px;
  }
  .stat-item-description {
    margin-bottom: 10px;
  }
  .stat-item:last-child {
    margin-bottom: 0;
  }

  /* Mobile Font Size Adjustments */
  .stat-number {
    font-size: 2.5rem; /* Further adjust if needed for space */
    font-weight: 300;
    letter-spacing: 0.5px;
  }
  .stat-description {
    font-size: 0.8rem; /* Adjust if needed */
    line-height: 1.4;
  }

  .stat-line {
    margin: 0 auto 0 0 !important;
  }

  /* Mobile visual shape adjustments */
  .visual-shape {
    transform-origin: center;
    transform: skewY(-8deg); /* Adjust skew if needed */
  }
  .purple-shape {
    transform: skewY(-8deg);
  }
  .image-shape {
    transform: skewY(-8deg);
  }
  /* Adjust image height/object-position if aspect ratio looks odd */
  .image-shape img {
    min-height: 280px; /* Match container min-height */
    /* object-position: center top; /* Example adjustment */
  }
}

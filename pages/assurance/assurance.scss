// =========================================
// Variables
// =========================================
@use "sass:color";
@use "sass:math"; // Needed for division potentially

$accent-purple: #a100ff;
$white: #fff;
$black: #000;
$dark-bg: #1c1c1c; // Mobile menu bg
$medium-dark-bg: #222; // Desktop dropdown bg
$light-dark-bg: #333; // Borders
$grey-text: #ccc;
$navbar-height: 80px;
$mobile-menu-transition: right 0.4s ease-in-out;
$desktop-breakpoint: 961px; // Point at which mobile styles turn off

// =========================================
// Reset & Body
// =========================================
* {
  box-sizing: border-box;
  margin: 30px 0; // Reset margin for all elements
  padding: 0;
}

body {
  font-family: Arial, sans-serif;
  background-color: $black;
  color: $white;
  // Add margin/padding to a main content wrapper if needed, avoid on body
}

// =========================================
// Navbar Base & Container
// =========================================
.navbar {
  background-color: $black;
  height: $navbar-height;
  display: flex;
  justify-content: center;
  align-items: center;
  position: sticky;
  top: 0;
  z-index: 999;
  border-bottom: 1px solid $light-dark-bg;

  .navbar-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
    width: 100%;
    margin: 0 auto;
    padding: 0 25px;
  }
}

// =========================================
// Logo
// =========================================
.navbar-logo {
  color: $white;
  text-decoration: none;
  font-size: 1.8rem;
  font-weight: bold;
  display: flex;
  align-items: center;
  flex-shrink: 0; // Prevent shrinking

  .logo-arrow {
    color: $accent-purple;
    margin-left: 2px;
    font-weight: bold;
    font-size: 2.2rem;
    line-height: 1;
  }
}

// =========================================
// Burger Menu Icon (Mobile Only)
// =========================================
.menu-icon {
  display: none; // Hidden by default
  color: $white;
  font-size: 1.8rem;
  cursor: pointer;
  z-index: 1001; // Above menu during transition overlap
  position: relative;
}

// =========================================
// Navigation Menu List (<ul class="nav-menu">)
// =========================================
.nav-menu {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex; // Default: Desktop Horizontal Layout
  align-items: center;
  height: 100%;
  .mobile-menu-header,
  .mobile-menu-footer {
    display: none; // Make them visible and use flex layout
  }
}

// =========================================
// Navigation Items (<li class="nav-item">)
// =========================================
.nav-item {
  height: 100%;
  position: relative; // Crucial for absolute positioning of dropdown
}

// =========================================
// Navigation Links (<a class="nav-links">)
// =========================================
.nav-links {
  color: $white;
  text-decoration: none;
  display: flex;
  align-items: center;
  height: 100%;
  padding: 0 1rem;
  cursor: pointer;
  white-space: nowrap;

  // --- Desktop Hover Effect ---
  &:hover {
    color: $accent-purple;
    border-bottom: 3px solid $accent-purple;
  }

  // --- Arrow Icons ---
  .dropdown-arrow {
    margin-left: 8px; // Consistent spacing
    font-size: 0.8em; // Default size
  }

  // Default: Show Desktop Arrow, Hide Mobile Arrow
  .mobile-arrow {
    display: none;
  }
  .desktop-arrow {
    display: inline-block;
  }
}

// =========================================
// Dropdown Content Area (<div class="dropdown-content">)
// =========================================
// =========================================
// Dropdown Content Area (<div class="dropdown-content">) - DESKTOP
// =========================================
.dropdown-content {
  display: none;
  position: absolute;
  top: $navbar-height; /* Position below the navbar */
  left: 0; // Aligns with the start of the nav item
  background-color: $medium-dark-bg; /* Dark background like image */
  min-width: 500px; /* Adjust as needed */
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.3);
  z-index: 10;
  padding: 20px;
  text-align: left;
  justify-content: center; // Center the wrappers if width allows
  gap: 30px; // Gap between wrappers
  .submenu-header {
    display: none;
  }
  .submenu-nav {
    display: inline-flex; // <<< CHANGE: Arrange wrappers horizontally on desktop
    gap: 30px; // <<< ADD: Space between the horizontal wrappers
    width: 100%; // <<< ADD: Allow it to take available width if needed
    justify-content: center; // Align wrappers to the start (left)
  }
  .dropdown-wrapper {
    display: flex; // Arrange title and column vertically
    flex-direction: column;

    h4 {
      color: $grey-text;
      font-size: 0.9rem;
      margin-bottom: 10px;
      font-weight: bold;
      text-transform: uppercase;
    }

    .dropdown-column {
      display: flex; /* Important for column layout */
      width: 100%; /* Take full width of the column */
      vertical-align: top;
      gap: 30px; // Gap between actual link columns

      .dropdown-column-types {
        display: flex;
        flex-direction: column; // Links stack vertically

        a {
          color: $white;
          padding: 8px 0px; /* Adjust padding */
          text-decoration: none;
          display: block;
          font-size: 0.95rem; /* Slightly smaller */

          &:hover {
            color: $accent-purple;
            background-color: transparent; /* No background on hover */
          }
        }
      }
    }
  }
}
// --- Desktop Dropdown Trigger ---
// This remains the same, it targets the display property of the block above
.nav-item.dropdown:hover > .dropdown-content {
  display: flex; // Override display: none and apply the flex rules defined inside .dropdown-content
}
// --- Desktop Dropdown Trigger ---
.nav-item.dropdown:hover > .dropdown-content {
  display: flex;
  position: fixed; // Show the dropdown on hover
  right: 0;
}

// =========================================
// Navbar Right Section (Desktop)
// =========================================
.navbar-right {
  display: flex; // Visible on desktop
  align-items: center;
  color: $white;

  .nav-icon-link,
  .nav-locale {
    color: $white;
    text-decoration: none;
    margin-left: 1.5rem;
    display: flex;
    align-items: center;

    i {
      margin-right: 5px;
    }

    &:hover {
      color: $accent-purple;
    }
  }
}

// ##############################################
// ##### MOBILE STYLES (Max Width 960px) ########
// ##############################################

// ##############################################
// ##### MOBILE STYLES (Max Width 960px) ########
// ##############################################

@media screen and (max-width: ($desktop-breakpoint - 1px)) {
  // --- Show Burger / Hide Desktop Right ---
  .menu-icon {
    display: block; // Show the burger icon
  }
  .navbar-right {
    display: none; // Hide desktop search/locale
  }

  // --- Mobile Nav Menu Container (The slide-out panel) ---
  .nav-menu {
    // --- Core Mobile Panel Styles ---
    display: flex; // Use flex for vertical structure (header, items, footer)
    flex-direction: column; // Stack children vertically
    position: fixed; // Take over viewport
    top: 0;
    right: -100%; // Start off-screen to the right
    width: 100%; // Full width
    height: 100%; // Full height
    height: 100vh; // Full viewport height (for better mobile compatibility)
    background-color: $dark-bg; // Mobile menu background
    z-index: 1000; // Ensure it's above page content
    transition: right 0.4s ease-in-out; // Slide animation
    overflow-y: auto; // Allow scrolling if content exceeds height
    overflow-x: hidden; // Prevent horizontal scrolling
    align-items: stretch; // Make children (header, li, footer) stretch full width
    text-align: left; // Default text alignment for items inside

    // --- State: When the menu is open ---
    &.active {
      right: 0; // Slide into view

      // Show mobile header/footer ONLY when menu is active
      .mobile-menu-header,
      .mobile-menu-footer {
        display: flex; // Make them visible and use flex layout
      }
    }

    // --- State: When a submenu is visible ---
    // This hides other top-level items when drilling down
    &.submenu-visible {
      // Target direct children LIs that are nav items
      > li.nav-item {
        display: none; // Hide all top-level items...
        &.submenu-active {
          display: block; // ...except the one whose submenu is active...
          > .nav-links {
            display: none; // ...but hide its trigger link (e.g., "Expertises >").
          }
        }
      }
    }

    // --- Mobile Menu Header (Inside the slide-out) ---
    .mobile-menu-header {
      display: none; // Hidden by default, shown by &.active rule above
      height: $navbar-height;
      align-items: center;
      justify-content: space-between; // Push close button and right icons apart
      padding: 0 20px;
      border-bottom: 1px solid $light-dark-bg;
      flex-shrink: 0; // Prevent header from shrinking

      .close-menu-btn {
        color: $white;
        font-size: 1.8rem;
        cursor: pointer;
        background: none;
        border: none;
        padding: 5px; // Easier tap target
        margin-left: -5px; // Align visually
      }

      .mobile-header-right {
        display: flex;
        align-items: center;
        gap: 1.5rem; // Space between search and locale

        .nav-icon-link,
        .nav-locale {
          display: flex; // Use flex for icon + text alignment if needed later
          color: $white;
          text-decoration: none;
          align-items: center;

          i {
            margin-right: 5px;
          }
          &:hover {
            color: $accent-purple;
          }
        }
      }
    }

    // --- Mobile Nav Item Styling (The LI elements) ---
    .nav-item {
      height: auto; // Override fixed desktop height
      width: 100%; // Take full width of the panel
      position: static; // CRITICAL: Override desktop `relative`. Submenu positions relative to `.nav-menu` now.
      border-bottom: 1px solid $light-dark-bg; // Separator line between items

      &:last-of-type {
        // Remove border from the last actual nav item before the footer
        // Note: This might target the footer if it's an LI, adjust if needed.
        // If footer isn't an LI, this should be fine.
        border-bottom: none;
      }

      // Hide desktop hover effect for dropdowns
      &:hover > .dropdown-content {
        display: none;
      }

      // --- CORRECTED STATE RULE: Show dropdown content when nav-item is active ---
      &.submenu-active {
        > .dropdown-content {
          display: flex; // Use flex because we set flex-direction: column on it
        }
      }
      // --- END CORRECTED STATE RULE ---
    }

    // --- Mobile Nav Link Styling (The A tags) ---
    .nav-links {
      display: flex; // Layout link text and arrow
      justify-content: space-between; // Push arrow to the right
      align-items: center;
      padding: 1rem 2rem; // Generous padding for tapping
      height: auto; // Override desktop height
      font-size: 1.2rem; // Readable mobile font size
      color: $white;
      text-decoration: none;
      width: 100%; // Ensure link fills the item
      border: none; // Remove any desktop border effects

      &:hover {
        background-color: rgba($white, 0.05); // Subtle hover feedback
        color: $white; // Keep text color on hover (or change if desired)
        border-bottom: none; // Ensure no desktop border shows on mobile hover
      }

      // --- Mobile Arrow Handling ---
      .dropdown-arrow {
        font-size: 1.1em; // Adjust arrow size if needed
        margin-left: 10px; // Space before arrow
      }
      .desktop-arrow {
        display: none;
      } // Hide desktop down arrow
      .mobile-arrow {
        display: inline-block;
      } // Show mobile right arrow
    }

    // --- Mobile Submenu Styling (The .dropdown-content) ---
    .dropdown-content {
      // --- Core Submenu Panel Styles (Overlay) ---
      display: none; // Hidden by default, shown via the .nav-item.submenu-active rule above
      position: absolute; // Position relative to the fixed .nav-menu
      top: 0;
      left: 0;
      width: 100%;
      height: 100%; // Full height overlay
      height: 100vh;
      background: $dark-bg; // Same background as main mobile menu
      z-index: 20; // Above the main nav items within the panel
      padding: 0; // Reset padding
      margin: 0; // Reset margin
      flex-direction: column; // Stack submenu header and nav area
      align-items: stretch; // Stretch children

      // --- State rule removed from here ---

      // --- Ignore Desktop Structure Elements for Layout ---
      // This prevents desktop columns from interfering with mobile flex layout
      > .dropdown-wrapper,
      > .dropdown-wrapper > .dropdown-column,
      > .dropdown-wrapper > .dropdown-column > .dropdown-column-types {
        display: contents; // Pass children through structurally
      }

      // --- Mobile Submenu Header (Back Button Area) ---
      .submenu-header {
        display: flex; // Make visible & use flex
        align-items: center;
        padding: 0 10px; // Padding around back button
        height: $navbar-height;
        border-bottom: 1px solid $light-dark-bg;
        flex-shrink: 0; // Prevent shrinking
        width: 100%;

        .submenu-back-btn {
          background: none;
          border: none;
          color: $white;
          font-size: 1.2rem;
          cursor: pointer;
          display: flex;
          align-items: center;
          padding: 10px; // Tap target
          text-align: left;

          i {
            margin-right: 10px; // Space between arrow and text
            font-size: 1.4rem; // Back arrow size
          }
          span {
            font-weight: bold; // Title text
          }
        }
      }

      // --- Mobile Submenu Links Area (Scrollable) ---
      .submenu-nav {
        display: block; // Make visible
        padding: 1rem 0; // Padding for the scrollable link area
        flex-grow: 1; // Take remaining vertical space
        overflow-y: auto; // Allow scrolling of links
        width: 100%;

        // Styling for the groups within the submenu (e.g., "Expertises", "Secteurs")
        .dropdown-wrapper {
          padding: 0 2rem; // Indent submenu sections
          margin-bottom: 1.5rem; // Space between sections

          h4 {
            // Section titles (e.g., "Expertises")
            color: $grey-text;
            font-size: 0.9rem;
            margin-bottom: 10px;
            font-weight: bold;
            text-transform: uppercase;
            padding-top: 0.5rem; // Space above title within its wrapper
          }
          // Container for links within a section
          .dropdown-column {
            // Removed display: contents here if it was added previously, not needed if wrappers above handle it
            .dropdown-column-types {
              // Removed display: contents here if it was added previously, not needed if wrappers above handle it
              a {
                // Actual submenu links
                color: $white;
                padding: 10px 0px; // Vertical padding, no horizontal (handled by wrapper)
                text-decoration: none;
                display: block; // Make links take full width for tapping
                font-size: 1rem;
                white-space: normal; // Allow link text to wrap on mobile

                &:hover {
                  color: $accent-purple;
                  background-color: transparent; // Ensure no bg color on hover
                }
              }
            }
          }
        }
      } // End .submenu-nav
    } // End .dropdown-content (mobile submenu)

    // --- Mobile Menu Footer (Inside the slide-out) ---
    .mobile-menu-footer {
      display: none; // Hidden by default, shown by &.active rule above
      flex-direction: column; // Stack links and social icons vertically
      padding: 1rem 2rem 1.5rem 2rem; // Padding around footer content
      border-top: 1px solid $light-dark-bg;
      width: 100%;
      flex-shrink: 0; // Prevent footer from shrinking
      margin-top: auto; // Push footer to the bottom if content is short

      a:not(.social-icons a) {
        // Target only text links, exclude social icons
        color: $grey-text;
        text-decoration: none;
        display: block; // Each link on its own line
        padding: 0.5rem 0; // Vertical spacing for links
        font-size: 1rem;
        text-align: left;
        &:hover {
          color: $white;
        }
      }

      .social-icons {
        display: flex;
        gap: 1.5rem; // Space between social icons
        margin-top: 1rem; // Space above social icons
        a {
          // Social icon links
          font-size: 1.5rem; // Icon size
          padding: 0; // Reset padding from text links
          color: $grey-text;
          &:hover {
            color: $white;
          }
        }
      }
    } // End .mobile-menu-footer
  } // End .nav-menu (mobile styles)
} // End @media screen and (max-width: ...)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/* --- Variables for Purple Navbar --- */
$purple-nav-bg: #3a006f;
$purple-nav-active-bg: #6a00a8;
$purple-nav-text: #ffffff;
$purple-nav-hover-bg: rgba(255, 255, 255, 0.1);
// VVVV FIXED VVVV Use color.adjust from sass:color module
$purple-nav-mobile-bg: color.adjust(
  $purple-nav-bg,
  $lightness: -5%
); // Slightly darker for mobile dropdown

$purple-nav-height: 60px;
$purple-nav-padding-x: 20px; // Horizontal padding for the main navbar
$purple-nav-link-padding-x: 18px; // Horizontal padding for links
$purple-nav-link-padding-y-mobile: 15px; // Vertical padding for mobile links

$purple-nav-brand-size: 1.3em;
$purple-nav-link-size: 0.95em;

$purple-nav-underline-thickness: 2px;
$purple-nav-underline-offset: 10px; // Distance from bottom

$purple-nav-transition: background-color 0.3s ease, max-height 0.3s ease-in-out;
$purple-nav-max-width: 1200px;
$purple-nav-z-index: 998; // <<<< IMPORTANT: Below Accenture nav z-index (999)

$purple-breakpoint-mobile: 960px;

/* --- Base Styles for Purple Navbar --- */
.purple-nav-navbar {
  background-color: $purple-nav-bg;
  color: $purple-nav-text;
  padding: 0 $purple-nav-padding-x;
  width: 100%;
  box-sizing: border-box;
  position: sticky; // Stays in flow until it hits the top offset
  // VVVV IMPORTANT VVVV Adjust this based on the ACTUAL height of the FIRST navbar (.navbar)
  top: $navbar-height; // Use the variable defined for the first navbar
  z-index: $purple-nav-z-index;

  .purple-nav-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: $purple-nav-height;
    margin: 0 auto;
    position: relative; // Needed for absolute positioning of mobile menu if used

    .purple-nav-brand {
      color: $purple-nav-text;
      text-decoration: none;
      font-size: $purple-nav-brand-size;
      font-weight: bold;
      flex-shrink: 0;
    }

    .purple-nav-toggle {
      display: none; // Hidden Desktop
      background: none;
      border: none;
      color: $purple-nav-text;
      cursor: pointer;
      padding: 5px; // Padding around the icon
      margin-left: 15px;
      line-height: 1; // Helps center icon vertically sometimes

      .purple-toggle-icon {
        // Targets the <i> tag now
        display: inline-block; // Needed for transform
        font-size: 1.4rem; // Adjust icon size as desired (try 1.2rem, 1.4rem, 1.6rem)
        transition: transform 0.3s ease-in-out; // Animate rotation
        vertical-align: middle; // Helps vertical alignment
      }
    }

    .purple-nav-menu {
      list-style: none;
      padding: 0;
      margin: 0;
      display: flex;
      align-items: stretch;
      height: 100%;

      .purple-nav-item {
        display: flex;
        align-items: center;

        .purple-nav-link {
          color: $purple-nav-text;
          text-decoration: none;
          padding: 0 $purple-nav-link-padding-x;
          display: flex;
          align-items: center;
          height: 100%;
          position: relative;
          font-size: $purple-nav-link-size;
          transition: background-color 0.3s ease; // Use specific transition

          &:hover {
            background-color: $purple-nav-hover-bg;
          }
        }

        &.purple-nav-active {
          background-color: $purple-nav-active-bg;

          .purple-nav-link::after {
            content: "";
            position: absolute;
            bottom: $purple-nav-underline-offset;
            left: $purple-nav-link-padding-x;
            right: $purple-nav-link-padding-x;
            height: $purple-nav-underline-thickness;
            background-color: $purple-nav-text;
          }
        }
      }
    }
  }
}

/* --- Purple Nav Mobile Media Query --- */
@media (max-width: ($purple-breakpoint-mobile - 1px)) {
  .purple-nav-navbar {
    .purple-nav-container {
      .purple-nav-toggle {
        display: block; // Show toggle button on mobile
      }

      .purple-nav-menu {
        display: flex;
        flex-direction: column;
        position: absolute;
        top: $purple-nav-height; // Below the purple navbar
        left: 0;
        width: 100%;
        background-color: $purple-nav-mobile-bg; // Use the adjusted color variable
        padding: 0;
        height: auto;
        max-height: 0; // Start hidden
        overflow: hidden;
        transition: max-height 0.3s ease-out;
        box-shadow: 0 3px 5px rgba(0, 0, 0, 0.1);
        margin: 0;

        .purple-nav-item {
          width: 100%;
          height: auto;
          border-bottom: 1px solid rgba($purple-nav-text, 0.1);
          margin: 0;

          &:last-child {
            border-bottom: none;
          }

          &.purple-nav-active {
            .purple-nav-link::after {
              display: none; // Hide desktop underline on mobile
            }
          }

          .purple-nav-link {
            width: 100%;
            padding: $purple-nav-link-padding-y-mobile $purple-nav-padding-x;
            height: auto;
            justify-content: flex-start;
            box-sizing: border-box;
            position: static; // Reset position if needed

            &::after {
              display: none; // Ensure underline is hidden
            }
          }
        }
      }
    }

    /* --- State Class Applied to purple-nav-navbar --- */
    &.purple-menu-open {
      .purple-nav-menu {
        max-height: 500px; // Or enough to show items
        transition: max-height 0.4s ease-in;
      }
      .purple-nav-toggle {
        .purple-toggle-icon {
          transform: rotate(
            180deg
          ); // Flips chevron-down to look like chevron-up
        }
      }
    }
  }
}

// ===== HERO SECTION STYLES =====
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/* --- Hero Variables --- */
$hero-bg: #000000;
$hero-text: #ffffff;
$hero-padding-y: 60px; // Vertical padding top/bottom for the section
$hero-padding-x: 20px; // Horizontal padding for the container consistency
$hero-max-width: 1200px; // Max width of content area (like navbars)
$hero-gap: 40px; // Space between image and text columns
$hero-breakpoint: 960px; // When the columns stack (adjust as needed, maybe 768px or 960px)

/* --- Hero Base Styles --- */
.hero-section {
  background-color: $hero-bg;
  color: $hero-text;
  padding: $hero-padding-y 0;
  overflow: hidden; // Helps contain elements

  .hero-container {
    margin: 0 auto;
    padding: 0 $hero-padding-x;
    display: flex;
    align-items: center; // Vertically align items in columns
    gap: $hero-gap; // Space between columns

    .hero-image-col {
      flex: 1 1 55%; // Allow shrinking, prefer 55% width initially
      max-width: 55%; // Ensure it doesn't exceed this on large screens if text is short

      .hero-illustration {
        display: block; // Remove extra space below image
        width: 100%; // Make image scale within its column
        height: auto; // Maintain aspect ratio
      }
    }

    .hero-text-col {
      flex: 1 1 45%; // Allow shrinking, prefer 45% width
      max-width: 45%;

      .hero-headline {
        font-size: clamp(
          2rem,
          5vw,
          3.2rem
        ); // Responsive font size (min, preferred, max)
        font-weight: bold;
        line-height: 1.2;
        margin: 0 0 25px 0; // Space below headline
      }

      .hero-paragraph {
        font-size: clamp(1rem, 2.5vw, 1.15rem); // Responsive font size
        line-height: 1.6;
        margin: 0;
        color: #e0e0e0; // Slightly off-white for paragraph if desired
      }
    }
  }
}

/* --- Hero Responsive Styles --- */
@media (max-width: ($hero-breakpoint - 1px)) {
  .hero-section {
    padding: ($hero-padding-y * 0.7) 0; // Slightly reduce padding on mobile

    .hero-container {
      flex-direction: column; // Stack columns vertically
      text-align: center; // Center text when stacked
      gap: 30px; // Adjust vertical gap

      .hero-image-col {
        flex-basis: auto; // Reset flex properties
        max-width: 85%; // Limit image width a bit, centered due to container margin auto
        order: 1; // Keep image first
      }

      .hero-text-col {
        flex-basis: auto; // Reset flex properties
        max-width: 100%; // Allow text to take full width
        order: 2; // Text comes after image

        .hero-headline {
          // Font size already responsive via clamp()
          margin-bottom: 20px; // Adjust margin if needed
        }

        .hero-paragraph {
          // Font size already responsive via clamp()
        }
      }
    }
  }
}

// ===== STATS SECTION STYLES =====
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/* --- Stats Variables --- */
$stats-bg: #000000; // Same as hero background
$stats-text: #ffffff;
$stats-purple: #a100ff; // Accent purple from main nav potentially? Or adjust.
$stats-desc-text: #e0e0e0; // Slightly off-white for description

$stats-padding-y: 80px; // Vertical padding top/bottom for the section
$stats-padding-x: 20px; // Horizontal padding for the container consistency
$stats-max-width: 1200px; // Max width of content area
$stats-grid-gap: 40px; // Gap between stat items
$stats-line-height: 4px;
$stats-line-width: 40px;
$stats-breakpoint: 768px; // When the columns stack (adjust if needed)

/* --- Stats Base Styles --- */
.stats-section {
  background-color: $stats-bg;
  color: $stats-text;
  padding: $stats-padding-y 0;

  .stats-container {
    max-width: $stats-max-width;
    margin: 0 auto;
    padding: 0 $stats-padding-x;

    .stats-title {
      font-size: clamp(1.8rem, 4vw, 2.5rem); // Responsive font size
      font-weight: bold;
      margin: 0 0 60px 0; // Space below title
      text-align: left; // Align title left as in image
    }

    .stats-grid {
      display: grid;
      // Create 3 equal columns on desktop
      grid-template-columns: repeat(3, 1fr);
      gap: $stats-grid-gap; // Gap between columns (and rows when stacked)

      .stat-item {
        // No extra styles needed here unless you want borders, specific padding, etc.

        .stat-line {
          height: $stats-line-height;
          width: $stats-line-width;
          background-color: $stats-purple;
          margin: 0 0 20px 0; // Space below line
        }

        .stat-number {
          font-size: clamp(3rem, 8vw, 5rem); // Large responsive number
          font-weight: bold;
          line-height: 1.1;
          margin: 0 0 15px 0; // Space below number
          display: inline; // Keep percent sign tight

          .percent-sign {
            font-size: 0.6em; // Smaller percentage sign
            vertical-align: baseline; // Align with number baseline
            margin-left: 2px;
          }
        }

        .stat-description {
          font-size: clamp(0.9rem, 2vw, 1rem); // Responsive description text
          line-height: 1.6;
          color: $stats-desc-text;
          margin: 0;
        }
      }
    }
  }
}

/* --- Stats Responsive Styles --- */
@media (max-width: ($stats-breakpoint - 1px)) {
  .stats-section {
    padding: ($stats-padding-y * 0.7) 0; // Reduce padding slightly

    .stats-container {
      .stats-title {
        text-align: center; // Center title on mobile
        margin-bottom: 40px;
      }

      .stats-grid {
        // Switch to a single column layout
        grid-template-columns: 1fr;
        gap: 50px; // Adjust vertical gap between stacked items

        .stat-item {
          text-align: center; // Center content within each item

          .stat-line {
            // Center the line
            margin-left: auto;
            margin-right: auto;
            margin-bottom: 15px;
          }

          .stat-number {
            margin-bottom: 10px;
            display: block; // Ensure centering works well
          }
        }
      }
    }
  }
}

// ===== CARD GRID SECTION STYLES =====
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// --- Add this line at the very top ---

// --- Variables ---
$bg-color-card: #000000; // Dark grey background
$text-color-primary: #ffffff; // White text
$text-color-secondary: #d0d0d0; // Lighter grey for category
$accent-color: #8a2be2; // Purple accent (approximated)

$font-family-sans: sans-serif;
$base-font-size: 16px;
$base-padding: 1.5rem; // Standard padding for content
$card-gap: 1.5rem; // Gap between cards in the second row

// --- Section Container ---
.card-section {
  margin: 0 auto; // Center the section
  .section-title {
    font-size: 2rem; // Example size
    color: $text-color-primary; // Use existing variable
    margin-bottom: 2rem; // Add space below the title
    text-align: left; // Or center, right as needed
  }
}

// --- Card Row ---
.card-row {
  display: flex;
  margin-bottom: $card-gap; // Space between rows

  // Modifier for the row with two cards
  &--double {
    gap: $card-gap; // Space between the two cards
  }
}

// --- Card Base Styles ---
.card {
  background-color: $bg-color-card;
  overflow: hidden; // Ensures image corners don't stick out if rounded
  display: flex;
  position: relative; // Still potentially useful for descendants
  width: 100%; // Default to full width within its container
}

// --- Card Content Area ---
.card__content {
  padding: $base-padding;
  position: relative; // Needed for absolute positioning of the link AND the pseudo-element
  padding-top: $base-padding + 1rem; // Extra padding top to make space for the line
  display: flex;
  flex-direction: column; // Stack content vertically by default
  flex-grow: 1; // Ensure content area tries to grow (helps push link down in vertical)

  // Purple line above category
  &::before {
    content: "";
    display: block;
    position: absolute;
    top: $base-padding; // Position it within the top padding
    left: $base-padding;
    width: 40px; // Width of the purple line
    height: 4px; // Thickness of the line
    background-color: $accent-color;
  }
}

// --- Image Wrapper ---
.card__image-wrapper {
  img {
    display: block; // Remove extra space below image
    width: 100%;
    height: 100%; // Make image fill wrapper height
    object-fit: cover; // Cover the area, cropping if needed
  }
}

// --- Text Elements ---
.card__category {
  font-size: 0.75rem;
  font-weight: bold;
  color: $text-color-secondary;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-bottom: 0.5rem;
}

.card__title {
  font-size: 1.75rem; // Larger title size
  font-weight: bold;
  color: $text-color-primary;
  line-height: 1.3;
  margin-bottom: 1rem; // Space below title
  // Removed flex-grow from here, added to parent .card__content
}

// --- Link Button (Arrow) - Applied to ALL Cards Now ---
.card__link {
  background-color: $accent-color;
  color: $text-color-primary;
  width: 40px;
  height: 40px;
  font-size: 1.1rem; // Adjust icon size if needed
  display: inline-flex; // Use inline-flex for alignment
  align-items: center;
  justify-content: center;
  text-decoration: none;
  position: absolute; // Position relative to the parent .card__content
  bottom: $base-padding;
  right: $base-padding;
  transition: background-color 0.2s ease;
  margin-top: auto; // Helps push it down if content is short in flex column

  // No specific SVG styling needed anymore

  &:hover,
  &:focus {
    background-color: color.adjust(
      $accent-color,
      $lightness: -5%
    ); // Darken on hover/focus
    outline: none; // Remove default focus outline if desired
  }
}

// --- Horizontal Card Modifier ---
.card--horizontal {
  flex-direction: row; // Image left, text right
  align-items: stretch; // Stretch items to fill height

  .card__image-wrapper {
    flex: 0 0 45%; // Image takes up 45% of width, doesn't grow/shrink
  }

  .card__content {
    flex: 1 1 auto; // Content takes remaining space, can grow/shrink
    justify-content: center; // Vertically center content block within its space
  }

  // REMOVED: Rule that hid the link
  // .card__link {
  //   display: none;
  // }
}

// --- Vertical Card Modifier ---
.card--vertical {
  flex-direction: column; // Image top, text bottom (default)

  .card__image-wrapper {
    width: 100%;
    height: 400px; // Give image a fixed height in vertical layout
  }

  // .card__content already has flex-grow: 1
}

// --- Responsive Adjustments ---
@media (max-width: 768px) {
  .card-row {
    flex-direction: column; // Stack cards vertically on smaller screens
    gap: $card-gap; // Keep gap between stacked cards
  }

  .card--horizontal {
    flex-direction: column; // Stack horizontal card content vertically too

    .card__image-wrapper {
      flex-basis: auto; // Reset flex-basis
      width: 100%;
      height: 250px; // Give image a fixed height when stacked
      max-width: none; // Reset max-width
    }
    .card__content {
      justify-content: flex-start; // Align top when stacked
    }
  }

  // Adjust title size on smaller screens
  .card__title {
    font-size: 1.5rem;
  }
}

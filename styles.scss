// SCSS Variables
$accent-purple: #a100ff;
$white: #fff;
$black: #000;
$dark-bg: #111; // Mobile menu background
$medium-dark-bg: #222; // Dropdown background
$light-dark-bg: #333; // Borders, mobile dropdown bg
$grey-text: #ccc; // Dropdown h4
$cta-purple: #8000ff; // Hero icon bg
$button-blue: #646cff; // Card button bg
$button-blue-hover: #535bf2; // Card button hover bg
$navbar-height: 80px;
$desktop-breakpoint: 961px; // Point at which mobile styles turn off
$mobile-menu-transition: right 0.4s ease-in-out;

// Global Reset
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: Arial, sans-serif;
  background-color: $black;
  color: $white;
  text-align: center; // Base text alignment
  height: 200vh; // For demonstration/scroll testing
}

.navbar {
  background-color: $black;
  height: $navbar-height;
  display: flex;
  justify-content: center;
  align-items: center;
  position: sticky;
  top: 0;
  z-index: 999; // Ensure navbar stays on top
  border-bottom: 1px solid $light-dark-bg;

  .navbar-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
    width: 100%;
    margin: 0 auto;
    padding: 0 25px;
  }
}

.navbar-logo {
  color: $white;
  text-decoration: none;
  font-size: 1.8rem;
  font-weight: bold;
  display: flex;
  align-items: center;
  flex-shrink: 0; // Prevent shrinking when space is limited

  .logo-arrow {
    color: $accent-purple;
    margin-left: 2px;
    font-weight: bold;
    font-size: 2.2rem;
    line-height: 1;
  }
}

.menu-icon {
  display: none; // Hidden on desktop
  color: $white;
  font-size: 1.8rem;
  cursor: pointer;
  z-index: 1001; // Above mobile menu during transition overlap
  position: relative;
}

.nav-menu {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  align-items: center;
  height: 100%;

  // These are shown only when the mobile menu is active
  .mobile-menu-header,
  .mobile-menu-footer {
    display: none;
  }
}

.nav-item {
  height: 100%;
  position: relative; // Crucial for absolutely positioned dropdown
}

.nav-links {
  color: $white;
  text-decoration: none;
  display: flex;
  align-items: center;
  height: 100%;
  padding: 0 1rem;
  cursor: pointer;
  white-space: nowrap;

  &:hover {
    color: $accent-purple;
    border-bottom: 3px solid $accent-purple;
  }

  .dropdown-arrow {
    margin-left: 8px;
    font-size: 0.8em;
  }

  .mobile-arrow {
    display: none;
  }
  .desktop-arrow {
    display: inline-block;
  }
}

.dropdown-content {
  display: none; // Hidden by default
  position: absolute;
  top: $navbar-height; // Position below the navbar
  left: 0; // Aligns with the start of the nav item
  background-color: $medium-dark-bg;
  min-width: 500px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.3);
  z-index: 10; // Below navbar but above page content
  padding: 20px;
  text-align: left;
  justify-content: center;
  gap: 30px;

  // Hidden on desktop, shown on mobile
  .submenu-header {
    display: none;
  }

  .submenu-nav {
    display: inline-flex; // Arrange wrappers horizontally on desktop
    gap: 30px;
    width: 100%;
    justify-content: center;
  }

  .dropdown-wrapper {
    display: flex;
    flex-direction: column;

    h4 {
      color: $grey-text;
      font-size: 0.9rem;
      margin-bottom: 10px;
      font-weight: bold;
      text-transform: uppercase;
    }

    .dropdown-column {
      display: flex;
      width: 100%;
      vertical-align: top;
      gap: 30px;

      .dropdown-column-types {
        display: flex;
        flex-direction: column; // Links stack vertically

        a {
          color: $white;
          padding: 8px 0px;
          text-decoration: none;
          display: block;
          font-size: 0.95rem;

          &:hover {
            color: $accent-purple;
            background-color: transparent; // No background on link hover
          }
        }
      }
    }
  }
}

.nav-item.dropdown:hover > .dropdown-content {
  display: flex; // Show the dropdown
  position: fixed;
  right: 0; // Align to right edge of viewport
}

.navbar-right {
  display: flex;
  align-items: center;
  color: $white;

  .nav-icon-link,
  .nav-locale {
    color: $white;
    text-decoration: none;
    margin-left: 1.5rem;
    display: flex;
    align-items: center;

    i {
      margin-right: 5px;
    }

    &:hover {
      color: $accent-purple;
    }
  }
}

// =========================================
// ============ MOBILE STYLES ==============
// =========================================
@media screen and (max-width: ($desktop-breakpoint - 1px)) {
  .menu-icon {
    display: block; // Show the burger icon
  }
  .navbar-right {
    display: none; // Hide desktop icons
  }

  .nav-menu {
    display: flex;
    flex-direction: column;
    position: fixed;
    top: 0;
    right: -100%; // Start off-screen
    width: 100%;
    height: 100vh; // Full viewport height
    background-color: $dark-bg;
    z-index: 1000; // Above page content
    transition: $mobile-menu-transition; // Slide animation
    overflow-y: auto; // Allow scrolling for long menus
    overflow-x: hidden;
    align-items: stretch;
    text-align: left;

    &.active {
      right: 0; // Slide into view

      // Show mobile header/footer ONLY when menu is active
      .mobile-menu-header,
      .mobile-menu-footer {
        display: flex;
      }
    }

    // Hides other top-level items when drilling down into a submenu
    &.submenu-visible {
      > li.nav-item {
        display: none; // Hide all top-level items...
        &.submenu-active {
          display: block; // ...except the active one...
          > .nav-links {
            display: none; // ...but hide its trigger link.
          }
        }
      }
    }

    .mobile-menu-header {
      display: none; // Shown by &.active rule
      height: $navbar-height;
      align-items: center;
      justify-content: space-between;
      padding: 0 20px;
      border-bottom: 1px solid $light-dark-bg;
      flex-shrink: 0; // Prevent shrinking

      .close-menu-btn {
        color: $white;
        font-size: 1.8rem;
        cursor: pointer;
        background: none;
        border: none;
        padding: 5px; // Easier tap target
        margin-left: -5px; // Visual alignment tweak
      }

      .mobile-header-right {
        display: flex;
        align-items: center;
        gap: 1.5rem;

        .nav-icon-link,
        .nav-locale {
          display: flex;
          color: $white;
          text-decoration: none;
          align-items: center;

          i {
            margin-right: 5px;
          }
          &:hover {
            color: $accent-purple;
          }
        }
      }
    }

    .nav-item {
      height: auto; // Override fixed desktop height
      width: 100%;
      // CRITICAL: Override desktop `relative`. Submenu now positions relative to fixed `.nav-menu`.
      position: static;
      border-bottom: 1px solid $light-dark-bg;

      &:last-of-type {
        // Remove border from the last actual nav item before the footer
        // Check structure if footer is also an LI
        border-bottom: none;
      }

      // Hide desktop hover effect for dropdowns on mobile
      &:hover > .dropdown-content {
        display: none;
      }

      &.submenu-active {
        > .dropdown-content {
          display: flex; // Show the nested dropdown/submenu panel
        }
      }
    }

    .nav-links {
      display: flex;
      justify-content: space-between; // Push arrow to right
      align-items: center;
      padding: 1rem 2rem; // Generous padding for tapping
      height: auto;
      font-size: 1.2rem;
      color: $white;
      text-decoration: none;
      width: 100%;
      border: none; // Remove desktop border effects

      &:hover {
        background-color: rgba($white, 0.05); // Subtle hover feedback
        color: $white;
        border-bottom: none; // Ensure no desktop border
      }

      .dropdown-arrow {
        font-size: 1.1em;
        margin-left: 10px;
      }
      .desktop-arrow {
        display: none;
      } // Hide desktop down arrow
      .mobile-arrow {
        display: inline-block;
      } // Show mobile right arrow
    }

    .dropdown-content {
      // Mobile Submenu Panel
      display: none; // Hidden by default, shown via .nav-item.submenu-active
      position: absolute; // Position relative to the fixed .nav-menu
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh; // Full height overlay
      background: $dark-bg; // Same background as main mobile menu
      z-index: 20; // Above the main nav items within the panel
      padding: 0;
      margin: 0;
      flex-direction: column; // Stack header and nav area
      align-items: stretch;

      // --- Ignore Desktop Structure Elements for Layout ---
      // Allows mobile flex layout to work without interference from desktop wrappers/columns
      > .dropdown-wrapper,
      > .dropdown-wrapper > .dropdown-column,
      > .dropdown-wrapper > .dropdown-column > .dropdown-column-types {
        display: contents; // Pass children through structurally
      }

      .submenu-header {
        // Mobile Submenu Header (Back Button Area)
        display: flex;
        align-items: center;
        padding: 0 10px;
        height: $navbar-height;
        border-bottom: 1px solid $light-dark-bg;
        flex-shrink: 0;
        width: 100%;

        .submenu-back-btn {
          background: none;
          border: none;
          color: $white;
          font-size: 1.2rem;
          cursor: pointer;
          display: flex;
          align-items: center;
          padding: 10px; // Tap target
          text-align: left;

          i {
            margin-right: 10px;
            font-size: 1.4rem;
          }
          span {
            font-weight: bold;
          }
        }
      }

      .submenu-nav {
        // Mobile Submenu Links Area (Scrollable)
        display: block;
        padding: 1rem 0;
        flex-grow: 1; // Take remaining vertical space
        overflow-y: auto; // Allow scrolling of links
        width: 100%;

        .dropdown-wrapper {
          padding: 0 2rem;
          margin-bottom: 1.5rem;

          h4 {
            // Section titles (e.g., "Expertises")
            color: $grey-text;
            font-size: 0.9rem;
            margin-bottom: 10px;
            font-weight: bold;
            text-transform: uppercase;
            padding-top: 0.5rem;
          }

          .dropdown-column {
            .dropdown-column-types {
              a {
                // Actual submenu links
                color: $white;
                padding: 10px 0px;
                text-decoration: none;
                display: block; // Make links take full width for tapping
                font-size: 1rem;
                white-space: normal; // Allow link text to wrap

                &:hover {
                  color: $accent-purple;
                  background-color: transparent;
                }
              }
            }
          }
        }
      }
    }

    .mobile-menu-footer {
      display: none; // Shown by &.active rule
      flex-direction: column;
      padding: 1rem 2rem 1.5rem 2rem;
      border-top: 1px solid $light-dark-bg;
      width: 100%;
      flex-shrink: 0;
      margin-top: auto; // Push footer to the bottom

      a:not(.social-icons a) {
        // Target only text links, exclude social icons
        color: $grey-text;
        text-decoration: none;
        display: block; // Each link on its own line
        padding: 0.5rem 0;
        font-size: 1rem;
        text-align: left;
        &:hover {
          color: $white;
        }
      }

      .social-icons {
        display: flex;
        gap: 1.5rem;
        margin-top: 1rem;
        a {
          // Social icon links
          font-size: 1.5rem;
          padding: 0;
          color: $grey-text;
          &:hover {
            color: $white;
          }
        }
      }
    }
  }
}

// Hero Section
.hero {
  padding: 100px 20px;

  h1 {
    font-size: 70px;
    font-weight: bold;
    line-height: 1.1;
  }

  p {
    font-size: 24px;
    margin: 20px 0;
    display: inline-flex;
    align-items: center;

    .cta-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: $cta-purple; // Use variable
      width: 40px;
      height: 40px;
      margin-left: 10px;

      svg {
        width: 30px;
        height: 30px;
      }
    }
  }

  .cta-button {
    padding: 10px 20px;
    font-size: 18px;
    border: none;
    background-color: $accent-purple; // Use variable
    color: $white;
    cursor: pointer;
  }
}

// Card Container & Cards
.card-container {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 20px;
  padding: 20px;
  max-width: 1200px;
  margin: 0 auto;

  @media (max-width: 1200px) {
    grid-template-columns: repeat(3, 1fr);
  }
  @media (max-width: 900px) {
    grid-template-columns: repeat(2, 1fr);
  }
  @media (max-width: 600px) {
    grid-template-columns: 1fr;
  }
}

.card {
  position: relative;
  width: 100%;
  height: 400px;
  border-radius: 8px;
  overflow: hidden;
  transition: transform 0.3s ease;
  // CSS Custom Properties for dynamic values
  --bg-image: none;
  --gradient-color-1: rgba(64, 134, 168, 0.8);
  --gradient-color-2: rgba(89, 149, 126, 0.8);

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: var(--bg-image);
    background-size: cover;
    background-position: center;
    transition: transform 0.5s ease;
    z-index: 1;
  }

  &:hover::before {
    transform: scale(1.1);
  }

  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      45deg,
      var(--gradient-color-1) 0%,
      var(--gradient-color-2) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 2;
  }

  &:hover::after {
    opacity: 1;
  }

  .card-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 20px;
    box-sizing: border-box;
    z-index: 3;
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;

    h1 {
      font-size: 24px;
      margin: 0 0 10px;
      color: white;
      text-align: left;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    }

    p {
      font-size: 16px;
      color: white;
      margin: 0;
      text-align: left;
      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
    }
  }

  .hidden-text {
    position: absolute;
    width: calc(100% - 40px);
    left: 100%;
    top: 100px;
    padding: 20px;
    transition: left 0.3s ease;
    box-sizing: border-box;
  }

  &:hover .hidden-text {
    left: 0;
  }

  .cta-button {
    position: absolute;
    bottom: -50px; // Start hidden below
    right: 20px;
    padding: 10px 20px;
    background-color: $button-blue; // Use variable
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: bottom 0.3s ease, background-color 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    max-width: calc(100% - 40px);
    display: flex;
    align-items: center;
    gap: 8px;
    z-index: 4; // Ensure button is above gradient overlay

    .cta-icon {
      // Nested styles for icon within this button
      display: flex;
      align-items: center;
      width: 20px;
      height: 20px;
      svg {
        width: 100%;
        height: 100%;
      }
    }

    &:hover {
      background-color: $button-blue-hover; // Use variable
    }
  }

  &:hover .cta-button {
    bottom: 20px; // Reveal on hover
  }
}

// Generic CTA Icon (if used elsewhere standalone)
.cta-icon {
  display: inline-flex;
  align-items: center;
  width: 20px; // Default size, override where needed
  height: 20px; // Default size, override where needed
  svg {
    width: 100%;
    height: 100%;
  }
}

// Standalone Dropdown Component (if different from navbar)
.dropdown {
  position: relative;
  cursor: pointer;
  text-align: left;

  .dropdown-container {
    // Assumes this is the content part
    display: none;
    position: absolute;
    background-color: $medium-dark-bg; // Example bg
    border-top: 1px solid $button-blue; // Example border
    z-index: 1000;
    left: 0;
    width: 100vw; // Example full width
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    flex-direction: row;
    justify-content: center;
  }
}

// =========================================
// ========= CAROUSEL SECTION STYLES =======
// =========================================
 $grey-text-light: #ccc;
$carousel-control-bg: rgba(30, 30, 30, 0.8);
$carousel-control-color: #eee;
$carousel-control-hover-bg: rgba(50, 50, 50, 0.9);
$mobile-breakpoint: 767px;


.carousel-section {
  background-color: $black;
  color: $white;
  padding: 0;
  position: relative;
  .carousel-section-title{
    margin: 30px;
  }
}

// --- Carousel Container ---
.carousel {
  width: 100%;
  position: relative;
  overflow: hidden; // Changed: Viewport handles overflow now
}

// --- Viewport ---
.carousel-viewport {
  width: 100%;
  overflow: hidden; // Crucial for clipping slides
}

// --- Track ---
.carousel-track {
  display: flex;
}

// --- Individual Slide Styling ---
.carousel-slide {
  display: flex;
  align-items: stretch;
  background-color: $black;
  min-height: 60vh;
  flex: 0 0 100%; // CRUCIAL: Each slide takes 100% of viewport width
  box-sizing: border-box;
}

.slide-image {
  flex-basis: 55%;
  flex-shrink: 0;
  height: auto;
  overflow: hidden;

  img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.slide-content {
  flex-basis: 45%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 40px 50px;
  box-sizing: border-box;
  min-width: 0; // Help prevent overflow issues in flex children
}

.slide-title {
  font-size: 2.2rem;
  font-weight: bold;
  margin-bottom: 20px;
  line-height: 1.3;
}

.slide-description {
  font-size: 1rem;
  color: $grey-text-light;
  line-height: 1.7;
  margin-bottom: 25px;
}

.slide-link {
  display: inline-flex;
  align-items: center;
  font-weight: bold;
  color: $white;
  text-decoration: none;
  margin-top: auto;
  align-self: flex-start;

  .slide-link-arrow {
    display: inline-block;
    margin-left: 10px;
    background-color: $accent-purple;
    color: $white;
    padding: 3px 8px;
    font-size: 1.1em;
    line-height: 1;
  }

  &:hover {
    .slide-link-arrow {
      opacity: 0.85;
    }
  }
}

// --- Controls Styling ---
.carousel-controls {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px 20px;
  box-sizing: border-box;
  z-index: 10;
}

// --- Pause/Play Button ---
.carousel-button.pauseplay {
  // Target specific class
  background-color: $carousel-control-bg;
  color: $carousel-control-color;
  border: none;
  width: 40px;
  height: 40px;
  border-radius: 2px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: background-color 0.2s ease;
  font-size: 1rem;

  &:hover {
    background-color: $carousel-control-hover-bg;
  }
}

// --- Navigation Container ---
.carousel-navigation {
  display: flex;
  align-items: center;
  gap: 10px;
  background-color: $carousel-control-bg;
  padding: 5px 10px;
  border-radius: 2px;
}

// --- Prev/Next Buttons ---
.carousel-button.prev, // Target specific classes
.carousel-button.next {
  position: static;
  margin: 0;
  width: 30px;
  height: 30px;
  background-color: transparent;
  color: $carousel-control-color;
  border: none;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 0.9rem;
  transition: color 0.2s ease;

  &:hover {
    color: $white;
  }

  &:disabled {
    // Style for disabled state if not looping
    opacity: 0.5;
    cursor: default;
    &:hover {
      color: $carousel-control-color;
    }
  }
}

// --- Pagination ---
.carousel-pagination {
  position: static;
  width: auto;
  font-size: 0.9rem;
  color: $carousel-control-color;
  font-weight: bold;
  // Spans inside are styled directly
  // .current-slide { }
  // .total-slides { }
}

// =========================================
// ========= CAROUSEL MOBILE STYLES ========
// =========================================
@media screen and (max-width: $mobile-breakpoint) {
  .carousel-slide {
    min-height: 50vh;
  }
  .slide-content {
    padding: 25px 30px;
  }
  .slide-title {
    font-size: 1.8rem;
  }
  .slide-description {
    font-size: 0.9rem;
    margin-bottom: 20px;
  }
  .carousel-controls {
    padding: 10px 15px;
  }
  .carousel-button.pauseplay {
    width: 35px;
    height: 35px;
    font-size: 0.9rem;
  }
  .carousel-navigation {
    padding: 4px 8px;
    gap: 8px;
  }
  .carousel-button.prev,
  .carousel-button.next {
    width: 25px;
    height: 25px;
    font-size: 0.8rem;
  }
  .carousel-pagination {
    font-size: 0.8rem;
  }
}
// --- Optional: Adjustments for very small screens ---
@media screen and (max-width: 480px) {
  .slide-image {
    flex-basis: 45%;
  } // Example: Slightly less image width
  .slide-content {
    flex-basis: 55%;
    padding: 20px;
  }
  .slide-title {
    font-size: 1.4rem;
  }
  .slide-description {
    display: none;
  } // Optionally hide description on very small screens
}
// Scroll Container & Sticky Component
.scroll-container {
  height: 100vh; // Example height
  position: relative;
}

.sticky-component {
  position: sticky;
  top: 0;
  height: 100vh;
  width: 100%;
  z-index: 10;
  left: 0;
  // Adjust negative margins carefully, might depend on parent padding/margin
  margin-left: -200px;
  margin-right: -200px;
}

.scroll-indicator {
  position: absolute;
  bottom: 30px;
  left: 50%;
  transform: translateX(-50%);
  color: white;
  font-size: 1rem;
  text-align: center;
  opacity: 0.8;
  animation: bounce 2s infinite;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
}

// Add bounce keyframes if not defined globally elsewhere
@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateX(-50%) translateY(0);
  }
  40% {
    transform: translateX(-50%) translateY(-15px);
  }
  60% {
    transform: translateX(-50%) translateY(-7px);
  }
}

// Parallax Cards Container
.cards-container {
  position: relative;

  .fixed-background {
    position: sticky;
    top: 0;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 0; // Background behind cards

    h2 {
      font-size: 4rem; // Large text
    }
  }

  .cards-wrapper {
    position: relative;
    z-index: 1; // Cards above background

    .cards-content {
      min-height: 100vh; // Ensure scroll space
      display: flex;
      flex-direction: column;
      align-items: center; // Center align the content block
      padding: 8rem 1rem; // Vertical padding

      .card-parallax {
        background-image: url("https://placehold.co/610x406"); // Placeholder
        padding: 1.5rem;
        margin-bottom: 8rem; // Spacing between cards
        max-width: 28rem; // Card max width
        width: 100%;
        background-size: cover;
        background-position: center;
        position: relative;
        overflow: hidden; // Hide overflowing extra text
        height: 400px; // Fixed height
        transition: all 0.3s ease; // General transition for potential effects

        &:nth-child(1) {
          align-self: flex-start; // Align first card left
        }
        &:nth-child(2) {
          align-self: flex-end; // Align second card right
        }
        // Add more nth-child rules for alternating alignment if needed

        h3 {
          font-size: 1.25rem;
          margin-bottom: 0.75rem;
          color: #1f2937; // Dark text color for contrast on light placeholder
          position: absolute;
          bottom: 1rem; // Position heading at bottom initially
          left: 1.5rem; // Align with padding
          right: 1.5rem; // Ensure it doesn't overflow
          transition: all 0.3s ease; // Transition for hover effect
        }

        .card-extra {
          position: absolute;
          bottom: -100%; // Start hidden below the card
          left: 1.5rem;
          right: 1.5rem;
          padding: 1rem;
          transform: translateY(100%); // Ensure fully hidden
          opacity: 0;
          transition: all 0.6s ease; // Slower transition for reveal
          text-align: left;
          color: $white; // Assuming dark overlay or background on hover
          // Need background/overlay on hover for text visibility
        }

        &:hover {
          // Example: Add an overlay on hover
          // &::after { ... overlay styles ... }

          .card-extra {
            transform: translateY(0);
            opacity: 1;
            bottom: 17rem; // Position revealed text (adjust as needed)
          }

          h3 {
            // Move heading up when extra text is shown
            bottom: calc(
              17rem + 1rem
            ); // Position above revealed text + padding
            // Adjust calculation based on revealed text height and desired spacing
          }
        }
      }
    }
  }
}

// Generic Layout Container (like Footer section)
.container {
  margin: auto;
  padding: 40px 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;

  .text-container {
    flex: 1;
    display: flex;
    flex-direction: column;
    text-align: left;

    .headline {
      font-size: 2em;
      font-weight: bold;
      margin-bottom: 40px;
    }

    .links {
      display: flex;
      justify-content: flex-start;
      flex-wrap: wrap;
      gap: 40px;

      .column {
        display: flex;
        flex-direction: column;

        a {
          color: rgba(255, 255, 255, 0.87);
          text-decoration: none;
          margin-bottom: 10px;
          font-size: 1em;
          &:hover {
            color: $accent-purple; // Example hover
          }
        }
      }
    }

    .footer {
      // Assuming this is text within the text-container
      font-size: 0.9em;
      margin-top: 40px;
    }
  }

  .image-container {
    flex: 1;
    display: flex;
    justify-content: flex-end;
    align-items: center;

    img {
      max-width: 50%; // Image takes up half the container max
      height: auto;
    }
  }
}

// Scroll Effect Wrapper (Image Reveal/Content Slide)
.scroll-effect-wrapper {
  position: relative;
  height: 300vh; // Height determines scroll duration
}

.scroll-section {
  position: sticky;
  top: 0;
  height: 100vh;
  width: 100%;
  display: flex;
  flex-direction: row; // Image and content side-by-side
  overflow: hidden; // Clip content moving outside bounds

  .scroll-image-container {
    position: relative; // Changed from original - check effect
    // top: auto; // Not needed if relative
    // left: auto; // Not needed if relative
    width: 100vw; // Start full width
    height: 100vh;
    transform-origin: left center; // Scale/shrink from left
    transition: width 0.3s ease-out; // Animate width change (if needed by JS)
    flex-shrink: 0; // Prevent image container from shrinking due to flex layout initially

    .hero-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      display: block;
    }
  }

  .content {
    position: relative; // Changed from original - check effect
    // top: auto; // Not needed if relative
    // right: auto; // Not needed if relative
    width: 50vw; // Target width
    height: 100vh;
    padding: 2rem 4rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    overflow-y: auto; // Allow content scrolling if needed
    opacity: 0; // Start hidden
    transform: translateX(100%); // Start off-screen right
    transition: opacity 0.8s ease, transform 0.8s ease; // Animate reveal
    flex-shrink: 0; // Prevent content from shrinking

    &.visible {
      // Class added by JS when content should appear
      opacity: 1;
      transform: translateX(0);
    }

    .content-section {
      padding: 2rem 0;
      max-width: 800px;
      text-align: left;

      h2 {
        margin-bottom: 1.5rem;
        font-size: 2.5rem;
      }

      .paragraph-reveal {
        // Initial state (if different from default) - not strictly needed if using JS for class toggle
        opacity: 1; // Start visible once parent .content.visible
        transform: translateY(30px); // Optional start position for animation
        transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1); // Animate properties
        font-size: 1.2rem;
        line-height: 1.6;
        margin-bottom: 1rem;

        // Example of animating on reveal (if JS adds a class to paragraphs too)
        // &.visible {
        //   opacity: 1;
        //   transform: translateY(0);
        // }
      }
    }
  }
}

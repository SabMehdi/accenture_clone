@use "sass:color";
@use "sass:math";

// --- Variables ---
$accent-purple: #a100ff;
$white: #fff;
$black: #000;
$dark-bg: #1c1c1c; // Consider if needed, using white now
$medium-dark-bg: #222; // Desktop dropdown bg (Keep for reference if needed)
$light-dark-bg: #e0e0e0; // Lighter border for white background
$grey-text: #555; // Darker grey for readability on white
$navbar-height: 80px;
$mobile-menu-transition: right 0.4s ease-in-out, opacity 0.4s ease-in-out; // Added opacity
$tablet-breakpoint: 960px; // Breakpoint where mobile styles START
$mobile-breakpoint: 767px; // Breakpoint for full-width mobile menu
$light-grey: #f4f4f4; // Background for the section
$link-blue: #007bff; // Example blue for the link
$grey-text: #555; // For the description text

// --- Base & Desktop Styles (Mostly unchanged, added comments) ---
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0; // Added margin reset
}

body {
  font-family: Arial, sans-serif;
  background-color: $white;
  color: $black; // Default text color to black
}

.navbar {
  background-color: $white;
  height: $navbar-height;
  display: flex;
  justify-content: center;
  align-items: center;
  position: sticky;
  top: 0;
  z-index: 999;
  border-bottom: 1px solid $light-dark-bg; // Lighter border

  .navbar-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
    width: 100%;
    margin: 0 auto;
    padding: 0 25px;
  }
}

.navbar-logo {
  color: $black;
  text-decoration: none;
  font-size: 1.8rem;
  font-weight: bold;
  display: flex;
  align-items: center;
  flex-shrink: 0;

  .logo-arrow {
    color: $accent-purple;
    margin-left: 2px;
    font-weight: bold;
    font-size: 2.2rem;
    line-height: 1;
  }
}

.menu-icon {
  display: none; // Hidden on desktop
  color: $black;
  font-size: 1.8rem;
  cursor: pointer;
  z-index: 1001;
  position: relative; // Ensure it's clickable
}

.nav-menu {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  align-items: center;
  height: 100%; // For desktop alignment

  // Hide mobile-specific elements on desktop
  .mobile-menu-header,
  .mobile-menu-footer {
    display: none;
  }
}

.nav-item {
  height: 100%; // For desktop alignment
  position: relative; // For desktop dropdown positioning
}

.nav-links {
  color: $black;
  text-decoration: none;
  display: flex;
  align-items: center;
  height: 100%; // For desktop alignment
  padding: 0 1rem;
  cursor: pointer;
  white-space: nowrap;
  transition: color 0.3s ease, border-color 0.3s ease; // Smooth transitions

  &:hover {
    color: $accent-purple;
    border-bottom: 3px solid $accent-purple;
  }

  .dropdown-arrow {
    margin-left: 8px;
    font-size: 0.8em;
    transition: transform 0.3s ease; // Add transition for potential rotation
  }

  // Hide the arrow used for mobile accordion on desktop
  .mobile-arrow {
    display: none; // Hidden on desktop
  }
}

// --- Desktop Dropdown Styles ---
.dropdown-content {
  display: none; // Hidden by default
  position: absolute; // Absolute positioning for desktop
  top: $navbar-height; // Position below navbar
  left: 0; // Align with nav item start
  background-color: $white;
  min-width: 500px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.15); // Softer shadow
  z-index: 10;
  padding: 20px;
  text-align: left;
  border-top: 1px solid $light-dark-bg; // Add top border

  .submenu-nav {
    display: inline-flex; // Horizontal layout for wrappers
    gap: 30px;
    width: 100%;
    justify-content: flex-start; // Align left
  }

  .dropdown-wrapper {
    display: flex;
    flex-direction: column;

    h4 {
      color: $grey-text;
      font-size: 0.9rem;
      margin-bottom: 10px;
      font-weight: bold;
      text-transform: uppercase;
    }

    .dropdown-column {
      .dropdown-column-types {
        display: flex;
        flex-direction: column; // Links stack vertically

        a {
          color: $black;
          padding: 8px 0px;
          text-decoration: none;
          display: block;
          font-size: 0.95rem;

          &:hover {
            color: $accent-purple;
          }
        }
      }
    }
  }
}

// Show desktop dropdown on hover
.nav-item.dropdown:hover > .dropdown-content {
  @media screen and (min-width: ($tablet-breakpoint + 1px)) {
    // Only apply hover on desktop
    display: flex; // Use flex for the inner .submenu-nav layout
    // position: fixed; // Avoid fixed position unless absolutely necessary
    // right: 0;
  }
}

.navbar-right {
  display: flex;
  align-items: center;
  color: $black;

  .nav-icon-link,
  .nav-locale {
    color: $black;
    text-decoration: none;
    margin-left: 1.5rem;
    display: flex;
    align-items: center;

    i {
      margin-right: 5px;
    }

    &:hover {
      color: $accent-purple;
    }
  }
}
// --- Ensure Desktop Elements are Visible ---
@media screen and (min-width: ($tablet-breakpoint + 1px)) {
  .navbar-right {
    display: flex; // Explicitly show on desktop
  }
  .menu-icon {
    display: none; // Explicitly hide on desktop
  }
  // Ensure mobile-only elements are hidden on desktop if they ever leak
  .mobile-menu-header,
  .mobile-menu-footer {
    display: none;
  }
}

// ================================================
// ============ TABLET & MOBILE STYLES ============
// ================================================
@media screen and (max-width: $tablet-breakpoint) {
  .menu-icon {
    display: block; // Show burger
  }
  .navbar-right {
    display: none; // Hide desktop icons
  }
  // Hide desktop hover dropdown effect on touch devices/mobile view
  .nav-item.dropdown:hover > .dropdown-content {
    display: none;
  }

  .nav-menu {
    // --- Tablet Styling (Partial Width) ---
    display: flex;
    flex-direction: column;
    position: fixed; // Fixed position for slide-in
    top: 0;
    right: -370px; // Start off-screen (adjust width + padding)
    width: 350px; // Fixed width for tablet menu
    max-width: 90%; // Ensure it doesn't exceed screen width on narrow tablets
    height: 100vh;
    background-color: $white;
    z-index: 1000;
    transition: $mobile-menu-transition;
    overflow-y: auto;
    overflow-x: hidden;
    align-items: stretch;
    text-align: left;
    border-left: 1px solid $light-dark-bg;
    box-shadow: -5px 0px 15px rgba(0, 0, 0, 0.1);
    opacity: 0; // Start hidden for fade-in

    &.active {
      right: 0; // Slide in
      opacity: 1; // Fade in

      .mobile-menu-header,
      .mobile-menu-footer {
        display: flex; // Show header/footer when active
      }
    }

    // --- Accordion Submenu Logic ---
    // Remove the old submenu-visible logic entirely
    // &.submenu-visible { ... } // DELETE THIS BLOCK

    .mobile-menu-header {
      display: none; // Shown by &.active
      height: $navbar-height;
      align-items: center;
      justify-content: space-between;
      padding: 0 20px;
      border-bottom: 1px solid $light-dark-bg;
      flex-shrink: 0;

      .close-menu-btn {
        color: $black;
        font-size: 1.8rem;
        cursor: pointer;
        background: none;
        border: none;
        padding: 5px;
        margin-left: -5px;
      }

      .mobile-header-right {
        display: flex;
        align-items: center;
        gap: 1.5rem;

        .nav-icon-link,
        .nav-locale {
          display: flex;
          color: $black;
          text-decoration: none;
          align-items: center;
          i {
            margin-right: 5px;
          }
          &:hover {
            color: $accent-purple;
          }
        }
      }
    }

    .nav-item {
      height: auto; // Override desktop height
      width: 100%;
      position: relative; // Needed for potential absolute elements within if any, but dropdown is block now
      border-bottom: 1px solid $light-dark-bg;

      &:last-of-type {
        // Check if this selector correctly targets the last dropdown item
        border-bottom: none;
      }

      // This class is now toggled by JS for accordion
      &.submenu-open {
        > .nav-links {
          // Optional: Style the active link differently if desired
          // background-color: rgba($black, 0.05);
        }
        > .nav-links .mobile-arrow {
          transform: rotate(180deg); // Rotate arrow when open
        }
        > .dropdown-content {
          display: block; // Show the dropdown content
          // Optional: Add animation
          // max-height: 1000px; // Example max-height for transition
          // transition: max-height 0.5s ease-in-out;
        }
      }
    }

    .nav-links {
      display: flex;
      justify-content: space-between; // Push arrow right
      align-items: center;
      padding: 1rem 1.5rem; // Adjust padding
      height: auto; // Override desktop height
      font-size: 1.1rem; // Slightly smaller font size
      color: $black;
      text-decoration: none;
      width: 100%;
      border-bottom: none; // Remove desktop hover border
      font-weight: bold; // Keep bold for clarity

      &:hover {
        background-color: rgba($black, 0.03); // Subtle hover
        color: $accent-purple;
        border-bottom: none;
      }

      .dropdown-arrow {
        font-size: 1em; // Adjust size if needed
        margin-left: 10px;
        transition: transform 0.3s ease-in-out; // Smooth rotation
      }

      // Show the mobile arrow, hide the (now non-existent) desktop one
      .mobile-arrow {
        display: inline-block;
      }
      // .desktop-arrow { display: none; } // Not needed if removed from HTML
    }

    // --- Mobile Dropdown Content (Accordion Style) ---
    .dropdown-content {
      display: none; // Hidden by default, shown by .submenu-open on parent
      position: static; // Important: No longer absolute/fixed
      width: 100%;
      height: auto; // Height is determined by content
      background: #f8f8f8; // Slightly different background for visual hierarchy
      z-index: auto; // Reset z-index
      padding: 0; // Reset padding, handled by inner elements
      margin: 0;
      box-shadow: none; // Remove desktop shadow
      border-top: 1px solid $light-dark-bg; // Add separator line
      // Optional: Transition for smooth open/close
      // max-height: 0;
      // overflow: hidden;
      // transition: max-height 0.5s ease-in-out;

      // Remove mobile-specific header (back button)
      .submenu-header {
        display: none !important;
      }

      // Reset desktop layout wrappers if they interfere
      > .dropdown-wrapper,
      > .dropdown-wrapper > .dropdown-column,
      > .dropdown-wrapper > .dropdown-column > .dropdown-column-types {
        //display: contents; // Might not be needed if layout below is sufficient
      }

      .submenu-nav {
        display: block; // Ensure it's block for vertical stacking
        padding: 0.5rem 0; // Add some vertical padding
        width: 100%;
        // Reset desktop flex behavior
        // gap: 0;
        // justify-content: initial;
      }

      .dropdown-wrapper {
        padding: 0 1.5rem 0 2.5rem; // Indent submenu items slightly
        margin-bottom: 0.5rem;

        h4 {
          color: $grey-text;
          font-size: 0.8rem;
          margin-bottom: 5px;
          padding-top: 0.8rem;
          font-weight: normal; // Less emphasis than main links
        }

        .dropdown-column {
          .dropdown-column-types {
            a {
              color: $black;
              padding: 0.6rem 0; // Adjust padding
              text-decoration: none;
              display: block;
              font-size: 1rem; // Match parent link or slightly smaller
              white-space: normal;

              &:hover {
                color: $accent-purple;
                background-color: transparent;
              }
            }
          }
        }
      }
    }

    .mobile-menu-footer {
      display: none; // Shown by &.active
      flex-direction: column;
      padding: 1rem 1.5rem 1.5rem 1.5rem; // Match link padding
      border-top: 1px solid $light-dark-bg;
      width: 100%;
      flex-shrink: 0;
      margin-top: auto; // Push to bottom

      a:not(.social-icons a) {
        color: $grey-text;
        text-decoration: none;
        display: block;
        padding: 0.5rem 0;
        font-size: 1rem;
        text-align: left;
        &:hover {
          color: $black;
        }
      }

      .social-icons {
        display: flex;
        gap: 1.5rem;
        margin-top: 1rem;
        a {
          font-size: 1.5rem;
          padding: 0;
          color: $grey-text;
          &:hover {
            color: $black;
          }
        }
      }
    }
  }

  // ==============================================
  // ============ SMALL MOBILE OVERRIDES ==========
  // ==============================================
  @media screen and (max-width: $mobile-breakpoint) {
    .nav-menu {
      // Override tablet styles for full-width menu
      width: 100%;
      max-width: 100%;
      right: -100%; // Start fully off-screen
      border-left: none; // No left border needed on full width
      box-shadow: none; // No shadow needed

      &.active {
        right: 0; // Slide in fully
      }

      // Adjust padding for smaller screens if needed
      .nav-links {
        padding: 1rem;
      }
      .dropdown-content .dropdown-wrapper {
        padding: 0 1rem 0 2rem;
      } // Adjust indentation
      .mobile-menu-footer {
        padding: 1rem;
      }
    }
  }
} // End of main mobile media query

// =========================================
// ============ HERO SECTION STYLES ========
// =========================================

// --- Define mobile breakpoint if not already defined globally ---
// =========================================
// ============ HERO SECTION STYLES ========
// =========================================

// --- Define necessary variables if not already global ---
// $white: #fff;
// $accent-purple: #a100ff; // Example color
// $mobile-breakpoint: 767px; // Example breakpoint

.hero-section {
  position: relative; // Crucial for absolute positioning of children
  width: 100%;
  min-height: 65vh; // Adjust height as needed for desktop/tablet
  display: flex; // Using flex to help center content vertically
  align-items: center; // Vertically center content
  justify-content: flex-start; // Align content to the left
  overflow: hidden; // Prevents video overflow issues
  color: $white; // Default text color for overlay

  // --- Video Background Container ---
  .hero-video-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1; // Place it behind the content and overlay

    video {
      width: 100%;
      height: 100%;
      object-fit: cover; // Cover the area, cropping as needed
    }

    // --- Optional Overlay ---
    .hero-overlay {
      // Nested overlay style if you add the div back to HTML
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.35); // Adjust darkness/opacity
      z-index: 0; // Between video (-1) and content (1)
    }
  }

  // --- Content Container ---
  .hero-content {
    position: relative; // Keep it above the overlay
    z-index: 1;
    padding: 40px 60px; // Adjust padding as needed
    max-width: 700px; // Limit width of text container
    text-align: left;

    .hero-category {
      display: block;
      font-size: 0.9rem;
      font-weight: bold;
      text-transform: uppercase;
      letter-spacing: 1px;
      margin-bottom: 15px;
      color: rgba($white, 0.9); // Slightly less bright than title
    }

    .hero-title {
      font-size: 3.5rem; // Adjust size
      font-weight: bold;
      margin-bottom: 20px;
      line-height: 1.2;
    }

    .hero-subtitle {
      font-size: 1.2rem; // Adjust size
      line-height: 1.6;
      color: rgba($white, 0.9); // Slightly less bright than title
    }
  }

  // =========================================
  // ============ HERO MOBILE STYLES =========
  // (Nested within .hero-section)
  // =========================================
  @media screen and (max-width: $mobile-breakpoint) {
    // --- Adjustments to the main section container ---
    flex-direction: column; // Stack items vertically
    min-height: auto; // Let content define height
    height: auto;
    align-items: stretch; // Stretch items to full width
    padding-top: 0; // Remove padding used for vertical alignment

    // --- Adjustments to the video background container ---
    .hero-video-background {
      position: relative; // Change from absolute to relative/static
      z-index: auto; // Reset z-index
      width: 100%;
      height: 50vh; // Give video a specific height on mobile, adjust as needed
      order: 2; // Make video appear *after* the content block

      // Remove overlay on mobile if content is separate
      .hero-overlay {
        display: none;
      }
      // video styles generally don't need changing here unless specific overrides needed
    }

    // --- Adjustments to the content container ---
    .hero-content {
      position: relative; // Ensure it's in normal flow
      order: 1; // Make content appear *before* the video block
      background-color: $accent-purple; // Purple background
      color: $white; // Ensure text is white on purple
      padding: 30px 20px; // Adjust mobile padding
      max-width: 100%; // Allow full width

      // Adjust text styles within content for mobile
      .hero-category,
      .hero-subtitle {
        color: $white; // Ensure these are also white
      }

      .hero-title {
        font-size: 2.5rem; // Smaller title for mobile
      }
      .hero-subtitle {
        font-size: 1rem; // Smaller subtitle
      }
    }
  } // --- End of mobile media query ---
} // --- End of .hero-section ---

// =========================================
// ============ TEASER STYLES ==============
// =========================================

.teaser-section {
  background-color: $light-grey;
  padding: 20px; // Vertical padding for the section
}

.teaser-box {
  background-color: $white;
  margin: 0 auto; // Center the box
  padding: 15px 50px; // Padding inside the white box
  display: flex;
  align-items: center;
  border: 1px solid #e0e0e0; // Subtle border like the image
  // Optional: add a subtle shadow
  // box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}

.teaser-icon {
  flex-shrink: 0; // Prevent icon from shrinking
  width: 30px; // Adjust size
  height: 30px; // Adjust size
  margin-right: 20px; // Space between icon and text
}

.teaser-text {
  flex-grow: 1; // Allow text block to take up available space if needed (optional)
  margin-right: 20px; // Space between text and link
  display: flex; // Keep label and description together
  align-items: baseline; // Align text nicely if font sizes differ
  flex-wrap: wrap; // Allow wrapping if needed on medium screens
}

.teaser-label {
  font-weight: bold;
  color: $black;
  margin-right: 10px; // Space between label and description
  white-space: nowrap; // Prevent label from wrapping
}

.teaser-description {
  color: $grey-text;
  font-size: 0.95rem;
}

.teaser-link {
  flex-shrink: 0; // Prevent link from shrinking
  margin-left: auto; // Pushes the link to the far right
  text-decoration: none;
  color: $link-blue;
  font-weight: bold;
  font-size: 0.9rem;
  white-space: nowrap; // Prevent link text from wrapping
  display: inline-flex; // Align icon nicely with text
  align-items: center;

  i, // Style for Font Awesome arrow
  &::after // Style if using content:"\2192"; for arrow
  {
    margin-left: 8px;
    font-size: 1em; // Make arrow relative to link font size
  }

  &:hover {
    text-decoration: underline;
  }
}

// =========================================
// ============ TEASER MOBILE STYLES =======
// =========================================
@media screen and (max-width: $mobile-breakpoint) {
  .teaser-box {
    padding: 15px; // Reduce padding slightly
    flex-wrap: wrap; // Allow items to wrap onto next line
  }

  .teaser-icon {
    display: none; // Hide the icon on mobile
  }

  .teaser-text {
    // Take full width when icon is gone and potentially wrapping
    flex-basis: 100%; // Allow text block to take full width if needed
    margin-right: 0; // Remove right margin when wrapping might occur
    margin-bottom: 10px; // Add space below text if link wraps below
    justify-content: center; // Center text if it wraps alone
    text-align: center; // Center text
    align-items: center;
    flex-direction: column;
  }

  .teaser-label {
    margin-right: 0; // Remove right margin when stacking
    margin-bottom: 5px; // Add space below label when stacking
    text-align: center;
  }

  .teaser-description {
    text-align: center;
  }

  .teaser-link {
    margin-left: 0; // Remove auto margin
    flex-basis: 100%; // Make link take full width
    justify-content: center; // Center link content (text + arrow)
    margin-top: 5px; // Add slight space above if text didn't wrap but icon disappeared
  }
}

// =========================================
// ======== CONTENT VIDEO SECTION STYLES ===
// =========================================

.content-video-section {
  padding: 60px 20px; // Vertical and horizontal padding for the whole section

  .section-container {
    // Optional: Centers content and sets max-width
    max-width: 1140px;
    margin: 0 auto;
    display: flex;
    gap: 40px; // Space between the two columns
    align-items: flex-start; // Align items to the top
  }

  // --- Left Column: Content ---
  .content-column {
    flex: 1.2; // Give content slightly more space perhaps, adjust as needed (or use flex: 1;)
    // Or use basis: flex: 0 0 55%;

    .cv-heading {
      font-size: 2.8rem; // Adjust size
      font-weight: bold;
      color: $black;
      margin-bottom: 25px;
      line-height: 1.3;
    }

    p {
      color: $grey-text;
      font-size: 1rem;
      line-height: 1.7;
      margin-bottom: 20px;

      a {
        color: $link-blue;
        text-decoration: underline;
        font-weight: 500; // Slightly bolder link

        &:hover {
          text-decoration: none;
        }
      }
    }
  }

  // --- Right Column: Video ---
  .video-column {
    flex: 1; // Take remaining space (or use flex: 0 0 45%;)

    // --- Responsive Video Wrapper (16:9 Aspect Ratio) ---
    .video-embed-wrapper {
      position: relative;
      padding-bottom: 56.25%; // 16:9 ratio (9 / 16 = 0.5625)
      height: 0;
      overflow: hidden;
      margin-bottom: 15px; // Space below video before caption
      background-color: #eee; // Light background while video loads

      iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: 0; // Ensure no iframe border
      }
    }

    .video-caption {
      font-size: 1.1rem;
      font-weight: bold;
      color: $black;
      margin-bottom: 8px;
      line-height: 1.4;
    }

    .video-transcript-link {
      font-size: 0.9rem;
      color: $link-blue;
      text-decoration: none;

      &:hover {
        text-decoration: underline;
      }
    }
  }

  // =========================================
  // ======== CONTENT VIDEO MOBILE STYLES ====
  // =========================================
  @media screen and (max-width: $mobile-breakpoint) {
    padding: 40px 15px; // Reduce padding on mobile

    .section-container {
      flex-direction: column; // Stack columns vertically
      gap: 30px; // Adjust vertical gap
    }

    // No need to change flex properties of columns as they stack naturally now

    .content-column {
      .cv-heading {
        font-size: 2rem; // Smaller heading on mobile
      }
      p {
        font-size: 0.95rem;
      }
    }

    .video-column {
      width: 100%; // Full width on mobile
      .video-caption {
        font-size: 1rem;
      }
    }
  } // --- End of mobile media query ---
} // --- End of .content-video-section ---
// =========================================
// ========= EXPERTISE SECTION STYLES ======
// =========================================

// --- Define necessary variables if not already global ---
$light-grey-bg: #f8f8f8;
$white: #fff;
$black: #000;
$grey-text: #555;
$accent-purple: #a100ff;
$grid-gap: 30px;
$card-horizontal-padding: 30px; // Padding left/right for card content
$icon-size: 55px; // Define icon size
$icon-overlap: calc(
  $icon-size * 0.9 / 2
); // How much the icon overlaps (half its height)
$mobile-breakpoint: 767px;

.expertise-section {
  background-color: $light-grey-bg;
  padding: 80px 20px 60px; // Increased top padding to make space for overlapping icons visually

  .section-container {
    max-width: 1140px;
    margin: 0 auto;
  }

  .expertise-heading {
    font-size: 2.5rem;
    font-weight: bold;
    color: $black;
    margin-bottom: 15px;
    text-align: left;
  }

  .expertise-intro {
    color: $grey-text;
    font-size: 1rem;
    line-height: 1.7;
    max-width: 850px;
    margin-bottom: 60px; // Increased space before grid starts due to overlap
    text-align: left;
  }

  .expertise-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: $grid-gap * 1.5 $grid-gap; // Increase row gap to accommodate overlap visually
    // Keep column gap normal
  }

  // --- Card Styling ---
  .expertise-card {
    background-color: $white;
    border: 1px solid #eee;
    position: relative; // CRUCIAL: Context for absolute icon positioning
    padding: ($icon-overlap + 20px)
      // Top padding starts below the icon's center + some space
      $card-horizontal-padding // Right padding
      30px // Bottom padding
      $card-horizontal-padding; // Left padding
    margin-top: $icon-overlap; // Add margin-top to card to push it down, making space for icon
    // This helps the grid gap calculation visually
    min-height: 200px; // Give card some minimum height if needed
  }

  // --- Icon Styling (Absolute Positioning) ---
  .card-icon {
    position: absolute;
    top: -$icon-overlap; // Pull icon up by half its height to overlap top edge
    left: $card-horizontal-padding; // Position horizontally from the left edge of the card
    width: $icon-size;
    height: $icon-size;
  }

  // --- Card Content Styling ---
  .card-content {
    // Styles for the text wrapper inside the card
    text-align: left; // Ensure content is left-aligned

    .card-title {
      font-size: 1.4rem;
      font-weight: bold;
      color: $black;
      margin-bottom: 10px;
    }

    .card-description {
      color: $grey-text;
      font-size: 0.95rem;
      line-height: 1.6;
    }
  }

  // =========================================
  // ========= EXPERTISE MOBILE STYLES =======
  // =========================================
  @media screen and (max-width: $mobile-breakpoint) {
    padding: 40px 15px; // Adjust section padding

    .expertise-intro {
      margin-bottom: 50px; // Adjust space
    }

    .expertise-grid {
      grid-template-columns: 1fr; // Single column
      gap: $grid-gap + $icon-overlap; // Adjust vertical gap for mobile, considering overlap space
    }

    // --- Reset Card for Mobile ---
    .expertise-card {
      padding: ($icon-overlap + 20px) 25px 30px 25px; // Keep top padding for icon overlap
      margin-top: $icon-overlap; // Keep margin-top to allow overlap space
      // Other styles like background remain
    }

    // --- Reset Icon Positioning Slightly for Mobile if needed ---
    .card-icon {
      // Position remains absolute, top/left/z-index remain the same
      left: 25px; // Adjust left position based on mobile card padding
      width: $icon-size * 0.9; // Optionally make icon slightly smaller
      height: $icon-size * 0.9;
    }

    // --- Adjust Card Content Padding/Fonts ---
    .card-content {
      .card-title {
        font-size: 1.3rem;
      }
      // Description font size likely okay
    }
  } // --- End of mobile media query ---
} // --- End of .expertise-section ---

// =========================================
// ========= STATS SECTION STYLES ==========
// =========================================

.stats-section {
  background-color: $light-grey-bg; // Matches previous section bg
  padding: 60px 20px;

  .section-container {
    max-width: 1140px;
    margin: 0 auto;
  }

  .stats-heading {
    font-size: 2.5rem;
    font-weight: bold;
    color: $black;
    margin-bottom: 15px;
    text-align: left;
  }

  .stats-intro {
    color: $grey-text;
    font-size: 1rem;
    line-height: 1.7;
    max-width: 850px;
    margin-bottom: 40px; // Space before the grid
    text-align: left;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr); // 2 columns on desktop/tablet
    gap: 40px 30px; // Row gap, Column gap
  }

  // --- Stat Card Styling ---
  .stat-card {
    // No background needed, sits on section background
    text-align: left;

    .stat-percentage {
      font-size: 4.5rem; // Large percentage text
      font-weight: bold;
      color: $black;
      line-height: 1.1; // Adjust line height for large font
      margin-bottom: 15px; // Space between percentage and line
    }

    .stat-line {
      display: block;
      width: 100%; // Make line full width of its container (the grid column)
      height: 5px; // Thickness of the line
      background-color: $accent-purple;
      margin-bottom: 15px; // Space between line and description
    }

    .stat-description {
      color: $grey-text;
      font-size: 0.95rem;
      line-height: 1.6;
    }
  }

  // =========================================
  // ========== STATS MOBILE STYLES ==========
  // =========================================
  @media screen and (max-width: $mobile-breakpoint) {
    padding: 40px 15px; // Adjust section padding

    .stats-heading {
      font-size: 2rem;
    }

    .stats-grid {
      grid-template-columns: 1fr; // Switch to single column
      gap: 35px; // Only need one gap value for single column
    }

    .stat-card {
      .stat-percentage {
        font-size: 3.5rem; // Smaller percentage on mobile
      }

      .stat-line {
        height: 4px; // Slightly thinner line if desired
        // max-width: 150px; // Optional: reduce max-width on mobile
      }

      .stat-description {
        font-size: 0.9rem;
      }
    }
  } // --- End of mobile media query ---
} // --- End of .stats-section ---

// =========================================
// ========== BLOG SECTION STYLES ==========
// =========================================

$blog-card-top-line-height: 5px;

.blog-section {
  background-color: $white;
  padding: 60px 0; // Vertical padding

  .section-container {
    max-width: 1140px;
    margin: 0 auto;
    padding-left: 15px;
    padding-right: 15px;

    // --- Desktop Flex Layout ---
    display: flex;
    flex-wrap: wrap; // Allow items below the first "row" to wrap
    justify-content: space-between; // Push text block and link apart
    align-items: flex-start; // Align tops of text block and link
    row-gap: 30px; // Add gap between the header row and separator/grid
  }

  // --- Element 1: Text Content Block ---
  .blog-text-content {
    flex-basis: 75%; // Take up most of the space on the left
    max-width: 850px; // Apply max-width here
    // order: 1; // Default order
  }

  .blog-heading {
    font-size: 2.5rem;
    font-weight: bold;
    color: $black;
    margin-bottom: 15px;
    text-align: left;
  }

  .blog-intro {
    color: $grey-text;
    font-size: 1rem;
    line-height: 1.7;
    margin-bottom: 0; // Remove bottom margin, spacing controlled by row-gap now
    text-align: left;
  }

  // --- Element 2: View More Link ---
  .blog-view-more {
    color: $link-blue;
    font-weight: bold;
    font-size: 0.9rem;
    text-decoration: none;
    white-space: nowrap;
    display: inline-flex;
    align-items: center;
    flex-shrink: 0;
    margin-top: 0.5em; // Align roughly with top of heading
    // order: 2; // Default order

    i,
    &::after {
      margin-left: 8px;
    }
    &:hover {
      text-decoration: underline;
    }
  }

  // --- Element 4: Blog Grid Styling ---
  .blog-grid {
    flex-basis: 100%; // Make grid take full width
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 30px;
    // order: 4; // Default order
  }

  // --- Blog Card Styling (remains the same as previous) ---
  .blog-card {
    background-color: $light-grey-bg;
    padding: 30px;
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
    overflow: hidden;

    &::before {
      /* Top purple line */
      content: "";
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: $blog-card-top-line-height;
      background-color: $accent-purple;
      z-index: 2;
    }
    .card-category,
    .card-title,
    .card-description,
    .card-read-more {
      position: relative;
      z-index: 3;
    }
    .card-category {
      /* styles */
      display: inline-block;
      font-size: 0.85rem;
      font-weight: 600;
      color: $link-blue;
      text-decoration: none;
      border-bottom: 2px solid $link-blue;
      margin-bottom: 15px;
      align-self: flex-start;
    }
    .card-title {
      /* styles */
      font-size: 1.5rem;
      font-weight: bold;
      color: $black;
      line-height: 1.4;
      margin-bottom: 10px;
      a {
        color: inherit;
        text-decoration: none;
        &:hover {
          text-decoration: underline;
        }
      }
    }
    .card-description {
      /* styles */
      color: $grey-text;
      font-size: 0.95rem;
      line-height: 1.6;
      flex-grow: 1;
      margin-bottom: 20px;
    }
    .card-read-more {
      /* styles */
      text-decoration: none;
      color: $link-blue;
      font-weight: bold;
      font-size: 0.9rem;
      display: inline-flex;
      align-items: center;
      margin-top: auto;
      align-self: flex-start;
      i,
      &::after {
        margin-left: 8px;
        font-size: 1em;
      }
      &:hover {
        text-decoration: underline;
      }
    }
  } // --- End .blog-card ---

  // =========================================
  // ========== BLOG MOBILE STYLES ===========
  // =========================================
  @media screen and (max-width: $mobile-breakpoint) {
    // --- Switch container to column flow for ordering ---
    .section-container {
      flex-direction: column;
      align-items: stretch; // Make children take full width by default
      row-gap: 0; // Reset row gap as spacing is handled by margins now
    }

    // --- Reorder Elements ---
    .blog-text-content {
      order: 1;
      flex-basis: auto;
      margin-bottom: 25px;
    } // Text first
    .blog-grid {
      order: 2;
      flex-basis: auto;
      margin-bottom: 30px;
    } // Grid third
    .blog-view-more {
      order: 4;
      flex-basis: auto;
      align-self: center;
      margin-top: 0;
    } // Link last & centered

    // --- Specific Mobile Adjustments ---
    .blog-heading {
      font-size: 2rem;
    }

    .blog-intro {
      // Stays within .blog-text-content
    }

    .blog-separator {
      height: 4px;
    }

    .blog-grid {
      grid-template-columns: 1fr; // Switch to single column
      gap: 25px; // Adjust vertical gap
    }

    .blog-card {
      padding: 25px; // Adjust card padding
      &::before {
        height: $blog-card-top-line-height * 0.8; // Thinner line on mobile
      }
      .card-title {
        font-size: 1.3rem;
      }
      .card-description {
        font-size: 0.9rem;
      }
    }
  } // --- End of mobile media query ---
} // --- End of .blog-section ---

// =========================================
// ===== POINTS OF VIEW SECTION STYLES =====
// =========================================

// --- Define necessary variables if not already global ---
// $light-grey-bg: #f8f8f8;
// $white: #fff;
// $black: #000;
// $grey-text: #555;
// $link-blue: #007bff;
// $accent-purple: #a100ff;
// $light-grey-border: #e0e0e0;
// $mobile-breakpoint: 767px;

.pov-section {
  background-color: $light-grey-bg; // Adjust background as needed
  padding: 60px 0; // Use container padding for horizontal

  .section-container {
    max-width: 1140px;
    margin: 0 auto;
    padding-left: 15px;
    padding-right: 15px;
  }

  .pov-heading {
    font-size: 2.5rem;
    font-weight: bold;
    color: $black;
    margin-bottom: 40px;
    text-align: left;
  }

  // --- Layout Container ---
  .pov-layout {
    display: flex;
    flex-wrap: wrap; // Allow side column to wrap on smaller tablet if needed before full mobile
    gap: 40px;
    align-items: flex-start;
  }

  // --- Main Column (Left) ---
  .pov-main-column {
    flex: 2; // Takes roughly 2/3rds of the space
    min-width: 0; // Prevent flexbox overflow issues
    display: flex;
    flex-direction: column;
    gap: 40px; // Space between large articles
  }

  // --- Side Column (Right) ---
  .pov-side-column {
    flex: 1; // Takes roughly 1/3rd of the space
    min-width: 0; // Prevent flexbox overflow issues
    display: flex;
    flex-direction: column;
    gap: 25px; // Space between small articles
  }

  // --- Shared Article Styles ---
  .article-category {
    display: inline-block;
    font-size: 0.8rem;
    font-weight: 600;
    color: $link-blue;
    text-decoration: none;
    border-bottom: 2px solid $link-blue;
    margin-bottom: 8px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .article-title {
    font-size: 1.3rem;
    font-weight: bold;
    color: $black;
    line-height: 1.4;
    margin-bottom: 8px;

    a {
      color: inherit;
      text-decoration: none;
      &:hover {
        text-decoration: underline;
      }
    }
  }

  // --- Large Article Styles (with image) ---
  .pov-article-large {
    display: flex;
    gap: 25px; // Space between image and text content
    align-items: flex-start; // Align top of image and text

    .article-image-link {
      display: block;
      flex-shrink: 0; // Prevent image link container from shrinking
    }

    .article-image {
      flex-basis: 160px; // Width of the image container
      height: 160px; // Height of the image container (make it square)
      overflow: hidden;
      // Removed: position: relative; - No longer needed for border

      // Removed: ::after pseudo-element for purple border

      img {
        display: block;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }

    .article-content {
      flex-grow: 1;
      min-width: 0; // Help prevent text overflow issues in flex child
    }

    .article-description {
      color: $grey-text;
      font-size: 0.95rem;
      line-height: 1.6;
      margin-top: 5px;
    }
  }

  // --- Small Article Styles (text only) ---
  .pov-article-small {
    border-bottom: 1px solid red;
    padding-bottom: 25px;

    &:last-child {
      border-bottom: none;
      padding-bottom: 0;
    }
    .article-title {
      font-size: 1.1rem;
    }
  }

  // =========================================
  // ===== POINTS OF VIEW MOBILE STYLES ======
  // =========================================
  @media screen and (max-width: $mobile-breakpoint) {
    padding: 40px 0; // Adjust section padding

    .pov-heading {
      font-size: 2rem;
      margin-bottom: 30px;
    }

    .pov-layout {
      flex-direction: column; // Stack main and side columns
      gap: 40px; // Vertical gap between main and side sections
    }

    .pov-main-column,
    .pov-side-column {
      flex-basis: auto; // Reset flex basis for stacking
      gap: 30px; // Adjust vertical gap between articles within columns
    }

    // --- Large Article on Mobile - MODIFIED ---
    .pov-article-large {
      // Keep default flex-direction: row - image and text stay side-by-side
      gap: 15px; // Reduce gap between image and text

      .article-image-link {
        // Stays display block, flex-shrink 0
      }

      .article-image {
        flex-basis: 100px; // Make image smaller and fixed width
        height: 100px; // Keep it square (or adjust height)
        flex-shrink: 0; // Ensure it doesn't shrink further
        // object-fit remains cover
      }

      .article-content {
        // Will take remaining space
      }

      .article-title {
        font-size: 1.1rem;
      } // Adjust font size
      .article-description {
        font-size: 0.9rem;
      }
    }

    // --- Small Article on Mobile ---
    .pov-article-small {
      padding-bottom: 20px; // Adjust padding
      .article-title {
        font-size: 1.05rem;
      } // Slightly adjust
    }
  } // --- End of mobile media query ---
} // --- End of .pov-section ---

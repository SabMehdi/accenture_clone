@use "sass:color";
@use "sass:math"; // Needed for division potentially

// --- Variables ---
$accent-purple: #a100ff;
$white: #fff;
$black: #000;
$dark-bg: #1c1c1c; // Consider if needed, using white now
$medium-dark-bg: #222; // Desktop dropdown bg (Keep for reference if needed)
$light-dark-bg: #e0e0e0; // Lighter border for white background
$grey-text: #555; // Darker grey for readability on white
$navbar-height: 80px;
$mobile-menu-transition: right 0.4s ease-in-out, opacity 0.4s ease-in-out; // Added opacity
$tablet-breakpoint: 960px; // Breakpoint where mobile styles START
$mobile-breakpoint: 600px; // Breakpoint for full-width mobile menu

// --- Base & Desktop Styles (Mostly unchanged, added comments) ---
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0; // Added margin reset
}

body {
  font-family: Arial, sans-serif;
  background-color: $white;
  color: $black; // Default text color to black
}

.navbar {
  background-color: $white;
  height: $navbar-height;
  display: flex;
  justify-content: center;
  align-items: center;
  position: sticky;
  top: 0;
  z-index: 999;
  border-bottom: 1px solid $light-dark-bg; // Lighter border

  .navbar-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
    width: 100%;
    margin: 0 auto;
    padding: 0 25px;
  }
}

.navbar-logo {
  color: $black;
  text-decoration: none;
  font-size: 1.8rem;
  font-weight: bold;
  display: flex;
  align-items: center;
  flex-shrink: 0;

  .logo-arrow {
    color: $accent-purple;
    margin-left: 2px;
    font-weight: bold;
    font-size: 2.2rem;
    line-height: 1;
  }
}

.menu-icon {
  display: none; // Hidden on desktop
  color: $black;
  font-size: 1.8rem;
  cursor: pointer;
  z-index: 1001;
  position: relative; // Ensure it's clickable
}

.nav-menu {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  align-items: center;
  height: 100%; // For desktop alignment

  // Hide mobile-specific elements on desktop
  .mobile-menu-header,
  .mobile-menu-footer {
    display: none;
  }
}

.nav-item {
  height: 100%; // For desktop alignment
  position: relative; // For desktop dropdown positioning
}

.nav-links {
  color: $black;
  text-decoration: none;
  display: flex;
  align-items: center;
  height: 100%; // For desktop alignment
  padding: 0 1rem;
  cursor: pointer;
  white-space: nowrap;
  transition: color 0.3s ease, border-color 0.3s ease; // Smooth transitions

  &:hover {
    color: $accent-purple;
    border-bottom: 3px solid $accent-purple;
  }

  .dropdown-arrow {
    margin-left: 8px;
    font-size: 0.8em;
    transition: transform 0.3s ease; // Add transition for potential rotation
  }

  // Hide the arrow used for mobile accordion on desktop
  .mobile-arrow {
    display: none; // Hidden on desktop
  }
}

// --- Desktop Dropdown Styles ---
.dropdown-content {
  display: none; // Hidden by default
  position: absolute; // Absolute positioning for desktop
  top: $navbar-height; // Position below navbar
  left: 0; // Align with nav item start
  background-color: $white;
  min-width: 500px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.15); // Softer shadow
  z-index: 10;
  padding: 20px;
  text-align: left;
  border-top: 1px solid $light-dark-bg; // Add top border

  .submenu-nav {
    display: inline-flex; // Horizontal layout for wrappers
    gap: 30px;
    width: 100%;
    justify-content: flex-start; // Align left
  }

  .dropdown-wrapper {
    display: flex;
    flex-direction: column;

    h4 {
      color: $grey-text;
      font-size: 0.9rem;
      margin-bottom: 10px;
      font-weight: bold;
      text-transform: uppercase;
    }

    .dropdown-column {
      .dropdown-column-types {
        display: flex;
        flex-direction: column; // Links stack vertically

        a {
          color: $black;
          padding: 8px 0px;
          text-decoration: none;
          display: block;
          font-size: 0.95rem;

          &:hover {
            color: $accent-purple;
          }
        }
      }
    }
  }
}

// Show desktop dropdown on hover
.nav-item.dropdown:hover > .dropdown-content {
  @media screen and (min-width: ($tablet-breakpoint + 1px)) {
    // Only apply hover on desktop
    display: flex; // Use flex for the inner .submenu-nav layout
    // position: fixed; // Avoid fixed position unless absolutely necessary
    // right: 0;
  }
}

.navbar-right {
  display: flex;
  align-items: center;
  color: $black;

  .nav-icon-link,
  .nav-locale {
    color: $black;
    text-decoration: none;
    margin-left: 1.5rem;
    display: flex;
    align-items: center;

    i {
      margin-right: 5px;
    }

    &:hover {
      color: $accent-purple;
    }
  }
}
// --- Ensure Desktop Elements are Visible ---
@media screen and (min-width: ($tablet-breakpoint + 1px)) {
  .navbar-right {
    display: flex; // Explicitly show on desktop
  }
  .menu-icon {
    display: none; // Explicitly hide on desktop
  }
  // Ensure mobile-only elements are hidden on desktop if they ever leak
  .mobile-menu-header,
  .mobile-menu-footer {
    display: none;
  }
}

// ================================================
// ============ TABLET & MOBILE STYLES ============
// ================================================
@media screen and (max-width: $tablet-breakpoint) {
  .menu-icon {
    display: block; // Show burger
  }
  .navbar-right {
    display: none; // Hide desktop icons
  }
  // Hide desktop hover dropdown effect on touch devices/mobile view
  .nav-item.dropdown:hover > .dropdown-content {
    display: none;
  }

  .nav-menu {
    // --- Tablet Styling (Partial Width) ---
    display: flex;
    flex-direction: column;
    position: fixed; // Fixed position for slide-in
    top: 0;
    right: -370px; // Start off-screen (adjust width + padding)
    width: 350px; // Fixed width for tablet menu
    max-width: 90%; // Ensure it doesn't exceed screen width on narrow tablets
    height: 100vh;
    background-color: $white;
    z-index: 1000;
    transition: $mobile-menu-transition;
    overflow-y: auto;
    overflow-x: hidden;
    align-items: stretch;
    text-align: left;
    border-left: 1px solid $light-dark-bg;
    box-shadow: -5px 0px 15px rgba(0, 0, 0, 0.1);
    opacity: 0; // Start hidden for fade-in

    &.active {
      right: 0; // Slide in
      opacity: 1; // Fade in

      .mobile-menu-header,
      .mobile-menu-footer {
        display: flex; // Show header/footer when active
      }
    }

    // --- Accordion Submenu Logic ---
    // Remove the old submenu-visible logic entirely
    // &.submenu-visible { ... } // DELETE THIS BLOCK

    .mobile-menu-header {
      display: none; // Shown by &.active
      height: $navbar-height;
      align-items: center;
      justify-content: space-between;
      padding: 0 20px;
      border-bottom: 1px solid $light-dark-bg;
      flex-shrink: 0;

      .close-menu-btn {
        color: $black;
        font-size: 1.8rem;
        cursor: pointer;
        background: none;
        border: none;
        padding: 5px;
        margin-left: -5px;
      }

      .mobile-header-right {
        display: flex;
        align-items: center;
        gap: 1.5rem;

        .nav-icon-link,
        .nav-locale {
          display: flex;
          color: $black;
          text-decoration: none;
          align-items: center;
          i {
            margin-right: 5px;
          }
          &:hover {
            color: $accent-purple;
          }
        }
      }
    }

    .nav-item {
      height: auto; // Override desktop height
      width: 100%;
      position: relative; // Needed for potential absolute elements within if any, but dropdown is block now
      border-bottom: 1px solid $light-dark-bg;

      &:last-of-type {
        // Check if this selector correctly targets the last dropdown item
        border-bottom: none;
      }

      // This class is now toggled by JS for accordion
      &.submenu-open {
        > .nav-links {
          // Optional: Style the active link differently if desired
          // background-color: rgba($black, 0.05);
        }
        > .nav-links .mobile-arrow {
          transform: rotate(180deg); // Rotate arrow when open
        }
        > .dropdown-content {
          display: block; // Show the dropdown content
          // Optional: Add animation
          // max-height: 1000px; // Example max-height for transition
          // transition: max-height 0.5s ease-in-out;
        }
      }
    }

    .nav-links {
      display: flex;
      justify-content: space-between; // Push arrow right
      align-items: center;
      padding: 1rem 1.5rem; // Adjust padding
      height: auto; // Override desktop height
      font-size: 1.1rem; // Slightly smaller font size
      color: $black;
      text-decoration: none;
      width: 100%;
      border-bottom: none; // Remove desktop hover border
      font-weight: bold; // Keep bold for clarity

      &:hover {
        background-color: rgba($black, 0.03); // Subtle hover
        color: $accent-purple;
        border-bottom: none;
      }

      .dropdown-arrow {
        font-size: 1em; // Adjust size if needed
        margin-left: 10px;
        transition: transform 0.3s ease-in-out; // Smooth rotation
      }

      // Show the mobile arrow, hide the (now non-existent) desktop one
      .mobile-arrow {
        display: inline-block;
      }
      // .desktop-arrow { display: none; } // Not needed if removed from HTML
    }

    // --- Mobile Dropdown Content (Accordion Style) ---
    .dropdown-content {
      display: none; // Hidden by default, shown by .submenu-open on parent
      position: static; // Important: No longer absolute/fixed
      width: 100%;
      height: auto; // Height is determined by content
      background: #f8f8f8; // Slightly different background for visual hierarchy
      z-index: auto; // Reset z-index
      padding: 0; // Reset padding, handled by inner elements
      margin: 0;
      box-shadow: none; // Remove desktop shadow
      border-top: 1px solid $light-dark-bg; // Add separator line
      // Optional: Transition for smooth open/close
      // max-height: 0;
      // overflow: hidden;
      // transition: max-height 0.5s ease-in-out;

      // Remove mobile-specific header (back button)
      .submenu-header {
        display: none !important;
      }

      // Reset desktop layout wrappers if they interfere
      > .dropdown-wrapper,
      > .dropdown-wrapper > .dropdown-column,
      > .dropdown-wrapper > .dropdown-column > .dropdown-column-types {
        //display: contents; // Might not be needed if layout below is sufficient
      }

      .submenu-nav {
        display: block; // Ensure it's block for vertical stacking
        padding: 0.5rem 0; // Add some vertical padding
        width: 100%;
        // Reset desktop flex behavior
        // gap: 0;
        // justify-content: initial;
      }

      .dropdown-wrapper {
        padding: 0 1.5rem 0 2.5rem; // Indent submenu items slightly
        margin-bottom: 0.5rem;

        h4 {
          color: $grey-text;
          font-size: 0.8rem;
          margin-bottom: 5px;
          padding-top: 0.8rem;
          font-weight: normal; // Less emphasis than main links
        }

        .dropdown-column {
          .dropdown-column-types {
            a {
              color: $black;
              padding: 0.6rem 0; // Adjust padding
              text-decoration: none;
              display: block;
              font-size: 1rem; // Match parent link or slightly smaller
              white-space: normal;

              &:hover {
                color: $accent-purple;
                background-color: transparent;
              }
            }
          }
        }
      }
    }

    .mobile-menu-footer {
      display: none; // Shown by &.active
      flex-direction: column;
      padding: 1rem 1.5rem 1.5rem 1.5rem; // Match link padding
      border-top: 1px solid $light-dark-bg;
      width: 100%;
      flex-shrink: 0;
      margin-top: auto; // Push to bottom

      a:not(.social-icons a) {
        color: $grey-text;
        text-decoration: none;
        display: block;
        padding: 0.5rem 0;
        font-size: 1rem;
        text-align: left;
        &:hover {
          color: $black;
        }
      }

      .social-icons {
        display: flex;
        gap: 1.5rem;
        margin-top: 1rem;
        a {
          font-size: 1.5rem;
          padding: 0;
          color: $grey-text;
          &:hover {
            color: $black;
          }
        }
      }
    }
  }

  // ==============================================
  // ============ SMALL MOBILE OVERRIDES ==========
  // ==============================================
  @media screen and (max-width: $mobile-breakpoint) {
    .nav-menu {
      // Override tablet styles for full-width menu
      width: 100%;
      max-width: 100%;
      right: -100%; // Start fully off-screen
      border-left: none; // No left border needed on full width
      box-shadow: none; // No shadow needed

      &.active {
        right: 0; // Slide in fully
      }

      // Adjust padding for smaller screens if needed
      .nav-links {
        padding: 1rem;
      }
      .dropdown-content .dropdown-wrapper {
        padding: 0 1rem 0 2rem;
      } // Adjust indentation
      .mobile-menu-footer {
        padding: 1rem;
      }
    }
  }
} // End of main mobile media query

// =========================================
// ============ HERO SECTION STYLES ========
// =========================================

// --- Define mobile breakpoint if not already defined globally ---
// =========================================
// ============ HERO SECTION STYLES ========
// =========================================

// --- Define necessary variables if not already global ---
// $white: #fff;
// $accent-purple: #a100ff; // Example color
// $mobile-breakpoint: 767px; // Example breakpoint

.hero-section {
    position: relative; // Crucial for absolute positioning of children
    width: 100%;
    min-height: 65vh; // Adjust height as needed for desktop/tablet
    display: flex; // Using flex to help center content vertically
    align-items: center; // Vertically center content
    justify-content: flex-start; // Align content to the left
    overflow: hidden; // Prevents video overflow issues
    color: $white; // Default text color for overlay
  
    // --- Video Background Container ---
    .hero-video-background {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1; // Place it behind the content and overlay
  
      video {
        width: 100%;
        height: 100%;
        object-fit: cover; // Cover the area, cropping as needed
      }
  
      // --- Optional Overlay ---
      .hero-overlay { // Nested overlay style if you add the div back to HTML
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: rgba(0, 0, 0, 0.35); // Adjust darkness/opacity
          z-index: 0; // Between video (-1) and content (1)
      }
    }
  
    // --- Content Container ---
    .hero-content {
      position: relative; // Keep it above the overlay
      z-index: 1;
      padding: 40px 60px; // Adjust padding as needed
      max-width: 700px; // Limit width of text container
      text-align: left;
  
      .hero-category {
        display: block;
        font-size: 0.9rem;
        font-weight: bold;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin-bottom: 15px;
        color: rgba($white, 0.9); // Slightly less bright than title
      }
  
      .hero-title {
        font-size: 3.5rem; // Adjust size
        font-weight: bold;
        margin-bottom: 20px;
        line-height: 1.2;
      }
  
      .hero-subtitle {
        font-size: 1.2rem; // Adjust size
        line-height: 1.6;
        color: rgba($white, 0.9); // Slightly less bright than title
      }
    }
  
    // =========================================
    // ============ HERO MOBILE STYLES =========
    // (Nested within .hero-section)
    // =========================================
    @media screen and (max-width: $mobile-breakpoint) {
      // --- Adjustments to the main section container ---
      flex-direction: column; // Stack items vertically
      min-height: auto; // Let content define height
      height: auto;
      align-items: stretch; // Stretch items to full width
      padding-top: 0; // Remove padding used for vertical alignment
  
      // --- Adjustments to the video background container ---
      .hero-video-background {
        position: relative; // Change from absolute to relative/static
        z-index: auto; // Reset z-index
        width: 100%;
        height: 50vh; // Give video a specific height on mobile, adjust as needed
        order: 2; // Make video appear *after* the content block
  
        // Remove overlay on mobile if content is separate
        .hero-overlay {
          display: none;
        }
        // video styles generally don't need changing here unless specific overrides needed
      }
  
      // --- Adjustments to the content container ---
      .hero-content {
        position: relative; // Ensure it's in normal flow
        order: 1; // Make content appear *before* the video block
        background-color: $accent-purple; // Purple background
        color: $white; // Ensure text is white on purple
        padding: 30px 20px; // Adjust mobile padding
        max-width: 100%; // Allow full width
  
        // Adjust text styles within content for mobile
        .hero-category,
        .hero-subtitle {
          color: $white; // Ensure these are also white
        }
  
        .hero-title {
          font-size: 2.5rem; // Smaller title for mobile
        }
        .hero-subtitle {
          font-size: 1rem; // Smaller subtitle
        }
      }
    } // --- End of mobile media query ---
  
  } // --- End of .hero-section ---


  // =========================================
// ============ TEASER STYLES ==============
// =========================================

// --- Define necessary variables if not already global ---
$light-grey: #f4f4f4; // Background for the section
$white: #fff;
$black: #000;
$accent-purple: #a100ff; // Color for the icon
$link-blue: #007bff; // Example blue for the link
$grey-text: #555; // For the description text
$mobile-breakpoint: 767px; // Use your defined breakpoint

.teaser-section {
  background-color: $light-grey;
  padding: 20px ; // Vertical padding for the section
}

.teaser-box {
  background-color: $white;
  margin: 0 auto; // Center the box
  padding: 15px 50px; // Padding inside the white box
  display: flex;
  align-items: center;
  border: 1px solid #e0e0e0; // Subtle border like the image
  // Optional: add a subtle shadow
  // box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}

.teaser-icon {
  flex-shrink: 0; // Prevent icon from shrinking
  width: 30px; // Adjust size
  height: 30px; // Adjust size
  margin-right: 20px; // Space between icon and text

  // Style if using <img> for SVG
  // The SVG file itself should ideally define the purple color
  // or use `currentColor` and set the color here.
  // If SVG uses currentColor:
  // color: $accent-purple;

  // If using Font Awesome <i> tag:
  // font-size: 2rem; // Adjust size
  // color: $accent-purple;
}

.teaser-text {
  flex-grow: 1; // Allow text block to take up available space if needed (optional)
  margin-right: 20px; // Space between text and link
  display: flex; // Keep label and description together
  align-items: baseline; // Align text nicely if font sizes differ
  flex-wrap: wrap; // Allow wrapping if needed on medium screens
}

.teaser-label {
  font-weight: bold;
  color: $black;
  margin-right: 10px; // Space between label and description
  white-space: nowrap; // Prevent label from wrapping
}

.teaser-description {
  color: $grey-text;
  font-size: 0.95rem;
}

.teaser-link {
  flex-shrink: 0; // Prevent link from shrinking
  margin-left: auto; // Pushes the link to the far right
  text-decoration: none;
  color: $link-blue;
  font-weight: bold;
  font-size: 0.9rem;
  white-space: nowrap; // Prevent link text from wrapping
  display: inline-flex; // Align icon nicely with text
  align-items: center;

  i, // Style for Font Awesome arrow
  &::after // Style if using content:"\2192"; for arrow
   {
    margin-left: 8px;
    font-size: 1em; // Make arrow relative to link font size
  }

   &:hover {
     text-decoration: underline;
   }
}


// =========================================
// ============ TEASER MOBILE STYLES =======
// =========================================
@media screen and (max-width: $mobile-breakpoint) {
  .teaser-box {
    padding: 15px; // Reduce padding slightly
    flex-wrap: wrap; // Allow items to wrap onto next line
  }

  .teaser-icon {
    display: none; // Hide the icon on mobile
  }

  .teaser-text {
     // Take full width when icon is gone and potentially wrapping
     flex-basis: 100%; // Allow text block to take full width if needed
     margin-right: 0; // Remove right margin when wrapping might occur
     margin-bottom: 10px; // Add space below text if link wraps below
     justify-content: center; // Center text if it wraps alone
     text-align: center; // Center text
     align-items: center;
     flex-direction: column;
  }

  .teaser-label {
    margin-right: 0; // Remove right margin when stacking
    margin-bottom: 5px; // Add space below label when stacking
    text-align: center;
  }

   .teaser-description{
       text-align: center;
   }

  .teaser-link {
    margin-left: 0; // Remove auto margin
    flex-basis: 100%; // Make link take full width
    justify-content: center; // Center link content (text + arrow)
    margin-top: 5px; // Add slight space above if text didn't wrap but icon disappeared
  }
}

// =========================================
// ======== CONTENT VIDEO SECTION STYLES ===
// =========================================

// --- Define necessary variables if not already global ---
$black: #000;
$grey-text: #555;
$link-blue: #007bff; // Example blue
$mobile-breakpoint: 767px; // Use your defined breakpoint

.content-video-section {
  padding: 60px 20px; // Vertical and horizontal padding for the whole section

  .section-container { // Optional: Centers content and sets max-width
    max-width: 1140px;
    margin: 0 auto;
    display: flex;
    gap: 40px; // Space between the two columns
    align-items: flex-start; // Align items to the top
  }

  // --- Left Column: Content ---
  .content-column {
    flex: 1.2; // Give content slightly more space perhaps, adjust as needed (or use flex: 1;)
    // Or use basis: flex: 0 0 55%;

    .cv-heading {
      font-size: 2.8rem; // Adjust size
      font-weight: bold;
      color: $black;
      margin-bottom: 25px;
      line-height: 1.3;
    }

    p {
      color: $grey-text;
      font-size: 1rem;
      line-height: 1.7;
      margin-bottom: 20px;

      a {
        color: $link-blue;
        text-decoration: underline;
        font-weight: 500; // Slightly bolder link

        &:hover {
          text-decoration: none;
        }
      }
    }
  }

  // --- Right Column: Video ---
  .video-column {
    flex: 1; // Take remaining space (or use flex: 0 0 45%;)

    // --- Responsive Video Wrapper (16:9 Aspect Ratio) ---
    .video-embed-wrapper {
      position: relative;
      padding-bottom: 56.25%; // 16:9 ratio (9 / 16 = 0.5625)
      height: 0;
      overflow: hidden;
      margin-bottom: 15px; // Space below video before caption
      background-color: #eee; // Light background while video loads

      iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: 0; // Ensure no iframe border
      }
    }

    .video-caption {
      font-size: 1.1rem;
      font-weight: bold;
      color: $black;
      margin-bottom: 8px;
      line-height: 1.4;
    }

    .video-transcript-link {
      font-size: 0.9rem;
      color: $link-blue;
      text-decoration: none;

      &:hover {
        text-decoration: underline;
      }
    }
  }


  // =========================================
  // ======== CONTENT VIDEO MOBILE STYLES ====
  // =========================================
  @media screen and (max-width: $mobile-breakpoint) {
    padding: 40px 15px; // Reduce padding on mobile

    .section-container {
        flex-direction: column; // Stack columns vertically
        gap: 30px; // Adjust vertical gap
    }

    // No need to change flex properties of columns as they stack naturally now

    .content-column {
        .cv-heading {
            font-size: 2rem; // Smaller heading on mobile
        }
        p {
            font-size: 0.95rem;
        }
    }

    .video-column {
        width: 100%; // Full width on mobile
        .video-caption {
            font-size: 1rem;
        }
    }
  } // --- End of mobile media query ---

} // --- End of .content-video-section ---